{"ast":null,"code":"// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\n\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\n\n\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n\n  return target.dispatchEvent(event);\n}\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\n\n\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n\n    var invalid = function (k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 || invalid('zIndex', 'auto') || invalid('transform', 'none') || invalid('mixBlendMode', 'normal') || invalid('filter', 'none') || invalid('perspective', 'none') || s['isolation'] === 'isolate' || s.position === 'fixed' || s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n\n    el = el.parentElement;\n  }\n\n  return false;\n}\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\n\n\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return (\n        /** @type {HTMLDialogElement} */\n        el\n      );\n    }\n\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n\n  return null;\n}\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\n\n\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\n\n\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\n\n\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\n\n\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function (el) {\n    return el + ':not([disabled])';\n  }); // TODO(samthor): tabindex values that are not numeric are not focusable.\n\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])'); // tabindex != \"\", not disabled\n\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\n\n\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n/**\n * @param {!Event} event\n * @return {?Element}\n */\n\n\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n\n  if (!submitter) {\n    var target = event.target;\n    var root = 'getRootNode' in target && target.getRootNode() || document;\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n\n  return submitter;\n}\n/**\n * @param {!Event} event\n */\n\n\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  var form =\n  /** @type {!HTMLFormElement} */\n  event.target; // We'd have a value if we clicked on an imagemap.\n\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n\n  if (value === null && submitter) {\n    value = submitter.value;\n  } // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n\n\n  var dialog = findNearestDialog(form);\n\n  if (!dialog) {\n    return;\n  } // Prefer formmethod on the button.\n\n\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n\n  if (formmethod !== 'dialog') {\n    return;\n  }\n\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\n\n\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false; // Set a11y role. Browsers that support dialog implicitly know this already.\n\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {\n      attributes: true,\n      attributeFilter: ['open']\n    });\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n\n    var cb = function () {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n\n    var timeout;\n\n    var delayModel = function (ev) {\n      if (ev.target !== dialog) {\n        return;\n      } // not for a child element\n\n\n      var cand = 'DOMNodeRemoved';\n      removed |= ev.type.substr(0, cand.length) === cand;\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function (name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  } // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click', this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype =\n/** @type {HTMLDialogElement.prototype} */\n{\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function () {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) {\n      return;\n    }\n\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function () {\n    if (!this.openAsModal_) {\n      return;\n    }\n\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = ''; // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    } // Clear the backdrop and remove from the manager.\n\n\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function (value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal(); // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function (e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function () {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function (dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function () {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function () {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' + 'This may cause it to be unusable. For more information, see this link: ' + 'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true; // Optionally center vertically, relative to the current viewport.\n\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    } // Insert backdrop.\n\n\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling); // Focus on whatever inside the dialog.\n\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function (opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n\n    this.setOpen(false); // Leave returnValue untouched in case it was set directly on the element\n\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    } // Triggering \"close\" event for any attached listeners on the <dialog>.\n\n\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n};\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function (element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function (element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null; // Some browsers throw on cssRules.\n\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n\n    if (!cssRules) {\n      continue;\n    }\n\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null; // Ignore errors on invalid selector texts.\n\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch (e) {}\n\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n\n      if (cssTop && cssTop !== 'auto' || cssBottom && cssBottom !== 'auto') {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.needsCentering = function (dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  } // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n\n\n  if (dialog.style.top !== 'auto' && dialog.style.top !== '' || dialog.style.bottom !== 'auto' && dialog.style.bottom !== '') {\n    return false;\n  }\n\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n/**\n * @param {!Element} element to force upgrade\n */\n\n\ndialogPolyfill.forceRegisterDialog = function (element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' + 'may not work correctly', element);\n  }\n\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n\n  new dialogPolyfillInfo(\n  /** @type {!HTMLDialogElement} */\n  element);\n};\n/**\n * @param {!Element} element to upgrade, if necessary\n */\n\n\ndialogPolyfill.registerDialog = function (element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n/**\n * @constructor\n */\n\n\ndialogPolyfill.DialogManager = function () {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n  var checkDOM = this.checkDOM_.bind(this); // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function (e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]); // sanity-check DOM\n  }.bind(this));\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function (records) {\n      var removed = [];\n      records.forEach(function (rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\n\n\ndialogPolyfill.DialogManager.prototype.blockDocument = function () {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {\n    childList: true,\n    subtree: true\n  });\n};\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\n\n\ndialogPolyfill.DialogManager.prototype.unblockDocument = function () {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n/**\n * Updates the stacking of all known dialogs.\n */\n\n\ndialogPolyfill.DialogManager.prototype.updateStacking = function () {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  } // Make the overlay a sibling of the dialog itself.\n\n\n  var last = this.pendingDialogStack[0];\n\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\n\n\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function (candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0; // only valid if top-most\n      }\n    }\n\n    candidate = candidate.parentElement;\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function (event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) {\n    return;\n  }\n\n  if (document.activeElement === document.documentElement) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(\n  /** @type {Element} */\n  target);\n\n  if (this.forwardTab_ === undefined) {\n    return;\n  } // move focus only from a tab key\n\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function (event) {\n  this.forwardTab_ = undefined;\n\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\n\n\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function (removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function (dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\n\n\ndialogPolyfill.DialogManager.prototype.pushDialog = function (dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n\n  this.updateStacking();\n  return true;\n};\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\n\n\ndialogPolyfill.DialogManager.prototype.removeDialog = function (dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n\n  if (index === -1) {\n    return;\n  }\n\n  this.pendingDialogStack.splice(index, 1);\n\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\n\nif (window.HTMLDialogElement === undefined) {\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n\n      methodDescriptor.get = function () {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n\n        return realGet.call(this);\n      };\n\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n\n      methodDescriptor.set = function (v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n\n        return realSet.call(this, v);\n      };\n\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n\n\n  document.addEventListener('click', function (ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n\n    if (ev.defaultPrevented) {\n      return;\n    } // e.g. a submit which prevents default submission\n\n\n    var target =\n    /** @type {Element} */\n    ev.target;\n\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n\n    if (!target || !isFormMethodDialog(target.form)) {\n      return;\n    }\n\n    var valid = target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1;\n\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) {\n        return;\n      } // this is a <input type=\"image\">, which can submit forms\n\n\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n\n    if (!dialog) {\n      return;\n    }\n\n    dialogPolyfill.formSubmitter = target;\n  }, false);\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n\n  document.addEventListener('submit', function (ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n\n    if (dialog) {\n      return; // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;","map":{"version":3,"names":["supportCustomEvent","window","CustomEvent","event","x","ev","document","createEvent","initCustomEvent","bubbles","cancelable","detail","prototype","Event","safeDispatchEvent","target","check","type","toLowerCase","dispatchEvent","createsStackingContext","el","body","s","getComputedStyle","invalid","k","ok","undefined","opacity","position","webkitOverflowScrolling","parentElement","findNearestDialog","localName","parentNode","host","safeBlur","shadowRoot","activeElement","blur","inNodeList","nodeList","node","i","length","isFormMethodDialog","hasAttribute","getAttribute","findFocusableElementWithin","hostElement","opts","query","map","push","querySelector","join","Element","elems","querySelectorAll","tagName","isConnected","element","contains","findFormSubmitter","submitter","form","HTMLFormElement","dialogPolyfill","formSubmitter","root","getRootNode","maybeHandleSubmit","defaultPrevented","value","imagemapUseValue","dialog","formmethod","preventDefault","close","dialogPolyfillInfo","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","addEventListener","returnValue","mo","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","removed","cb","downgradeModal","timeout","delayModel","cand","substr","clearTimeout","setTimeout","forEach","name","Object","defineProperty","set","setOpen","get","backdrop_","createElement","className","backdropMouseEvent_","style","zIndex","top","removeChild","dm","removeDialog","removeAttribute","e","fake","insertBefore","firstChild","tabIndex","focus","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","stopPropagation","focus_","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","console","warn","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","scrollTop","documentElement","topValue","innerHeight","offsetHeight","Math","max","isInlinePositionSetByStylesheet","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","selectorText","cssTop","getPropertyValue","cssBottom","computedStyle","bottom","forceRegisterDialog","HTMLDialogElement","registerDialog","DialogManager","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","concat","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","p","appendChild","containedByTopDialog_","candidate","composedPath","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","clone","slice","indexOf","allowed","unshift","index","splice","testForm","method","methodDescriptor","getOwnPropertyDescriptor","realGet","call","realSet","v","path","shift","valid","offsetX","offsetY","nativeFormSubmit","submit","replacementFormSubmit"],"sources":["/Users/stichtinghelden/Documents/GitHub/de_verdwenen_ceo/node_modules/dialog-polyfill/dist/dialog-polyfill.esm.js"],"sourcesContent":["// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n  return target.dispatchEvent(event);\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function(el) {\n    return el + ':not([disabled])';\n  });\n  // TODO(samthor): tabindex values that are not numeric are not focusable.\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n\n/**\n * @param {!Event} event\n * @return {?Element}\n */\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n  if (!submitter) {\n    var target = event.target;\n    var root = ('getRootNode' in target && target.getRootNode() || document);\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n  return submitter;\n}\n\n/**\n * @param {!Event} event\n */\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  var form = /** @type {!HTMLFormElement} */ (event.target);\n\n  // We'd have a value if we clicked on an imagemap.\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n  if (value === null && submitter) {\n    value = submitter.value;\n  }\n\n  // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n  var dialog = findNearestDialog(form);\n  if (!dialog) {\n    return;\n  }\n\n  // Prefer formmethod on the button.\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n  if (formmethod !== 'dialog') {\n    return;\n  }\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup'  , this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click'    , this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = /** @type {HTMLDialogElement.prototype} */ ({\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n\n});\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n    if (dialog) {\n      return;  // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}