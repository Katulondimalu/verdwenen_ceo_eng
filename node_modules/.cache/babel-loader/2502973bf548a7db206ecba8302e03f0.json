{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"../../../IllegalArgumentException\");\n\nvar ArithmeticException_1 = require(\"../../../ArithmeticException\");\n\nvar ModulusBase =\n/** @class */\nfunction () {\n  function ModulusBase() {}\n\n  ModulusBase.prototype.add = function (a, b) {\n    return (a + b) % this.modulus;\n  };\n\n  ModulusBase.prototype.subtract = function (a, b) {\n    return (this.modulus + a - b) % this.modulus;\n  };\n\n  ModulusBase.prototype.exp = function (a) {\n    return this.expTable[a];\n  };\n\n  ModulusBase.prototype.log = function (a) {\n    if (a === 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return this.logTable[a];\n  };\n\n  ModulusBase.prototype.inverse = function (a) {\n    if (a === 0) {\n      throw new ArithmeticException_1.default();\n    }\n\n    return this.expTable[this.modulus - this.logTable[a] - 1];\n  };\n\n  ModulusBase.prototype.multiply = function (a, b) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n  };\n\n  ModulusBase.prototype.getSize = function () {\n    return this.modulus;\n  };\n\n  ModulusBase.prototype.equals = function (o) {\n    return o === this;\n  };\n\n  return ModulusBase;\n}();\n\nexports.default = ModulusBase;","map":{"version":3,"sources":["../../../../../src/core/pdf417/decoder/ec/ModulusBase.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,0BAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AAEA,IAAA,WAAA;AAAA;AAAA,YAAA;EAAA,SAAA,WAAA,GAAA,CA8CC;;EAxCC,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAe,CAAf,EAAwB;IACtB,OAAO,CAAC,CAAC,GAAG,CAAL,IAAU,KAAK,OAAtB;EACD,CAFD;;EAIA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,CAAT,EAAoB,CAApB,EAA6B;IAC3B,OAAO,CAAC,KAAK,OAAL,GAAe,CAAf,GAAmB,CAApB,IAAyB,KAAK,OAArC;EACD,CAFD;;EAIA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAa;IACX,OAAO,KAAK,QAAL,CAAc,CAAd,CAAP;EACD,CAFD;;EAIA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAa;IACX,IAAI,CAAC,KAAK,CAAV,EAAa;MACX,MAAM,IAAI,0BAAA,CAAA,OAAJ,EAAN;IACD;;IACD,OAAO,KAAK,QAAL,CAAc,CAAd,CAAP;EACD,CALD;;EAOA,WAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,CAAR,EAAiB;IACf,IAAI,CAAC,KAAK,CAAV,EAAa;MACX,MAAM,IAAI,qBAAA,CAAA,OAAJ,EAAN;IACD;;IACD,OAAO,KAAK,QAAL,CAAc,KAAK,OAAL,GAAe,KAAK,QAAL,CAAc,CAAd,CAAf,GAAkC,CAAhD,CAAP;EACD,CALD;;EAOA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,CAAT,EAAoB,CAApB,EAA6B;IAC3B,IAAI,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAArB,EAAwB;MACtB,OAAO,CAAP;IACD;;IACD,OAAO,KAAK,QAAL,CAAc,CAAC,KAAK,QAAL,CAAc,CAAd,IAAmB,KAAK,QAAL,CAAc,CAAd,CAApB,KAAyC,KAAK,OAAL,GAAe,CAAxD,CAAd,CAAP;EACD,CALD;;EAOA,WAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;IACE,OAAO,KAAK,OAAZ;EACD,CAFD;;EAIA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,CAAP,EAAgB;IACd,OAAO,CAAC,KAAK,IAAb;EACD,CAFD;;EAGF,OAAA,WAAA;AAAC,CA9CD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IllegalArgumentException_1 = require(\"../../../IllegalArgumentException\");\nvar ArithmeticException_1 = require(\"../../../ArithmeticException\");\nvar ModulusBase = /** @class */ (function () {\n    function ModulusBase() {\n    }\n    ModulusBase.prototype.add = function (a, b) {\n        return (a + b) % this.modulus;\n    };\n    ModulusBase.prototype.subtract = function (a, b) {\n        return (this.modulus + a - b) % this.modulus;\n    };\n    ModulusBase.prototype.exp = function (a) {\n        return this.expTable[a];\n    };\n    ModulusBase.prototype.log = function (a) {\n        if (a === 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        return this.logTable[a];\n    };\n    ModulusBase.prototype.inverse = function (a) {\n        if (a === 0) {\n            throw new ArithmeticException_1.default();\n        }\n        return this.expTable[this.modulus - this.logTable[a] - 1];\n    };\n    ModulusBase.prototype.multiply = function (a, b) {\n        if (a === 0 || b === 0) {\n            return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n    };\n    ModulusBase.prototype.getSize = function () {\n        return this.modulus;\n    };\n    ModulusBase.prototype.equals = function (o) {\n        return o === this;\n    };\n    return ModulusBase;\n}());\nexports.default = ModulusBase;\n//# sourceMappingURL=ModulusBase.js.map"]},"metadata":{},"sourceType":"script"}