{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n/**\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n * of one-dimensional barcodes.</p>\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author alasdair@google.com (Alasdair Mackintosh)\n */\n\n\nvar AbstractUPCEANReader =\n/** @class */\nfunction (_super) {\n  __extends(AbstractUPCEANReader, _super);\n\n  function AbstractUPCEANReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.decodeRowStringBuffer = '';\n    return _this;\n  } // private final UPCEANExtensionSupport extensionReader;\n  // private final EANManufacturerOrgSupport eanManSupport;\n\n  /*\n  protected UPCEANReader() {\n      decodeRowStringBuffer = new StringBuilder(20);\n      extensionReader = new UPCEANExtensionSupport();\n      eanManSupport = new EANManufacturerOrgSupport();\n  }\n  */\n\n\n  AbstractUPCEANReader.findStartGuardPattern = function (row) {\n    var foundStart = false;\n    var startRange = null;\n    var nextStart = 0;\n    var counters = [0, 0, 0];\n\n    while (!foundStart) {\n      counters = [0, 0, 0];\n      startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n      var start = startRange[0];\n      nextStart = startRange[1];\n      var quietStart = start - (nextStart - start);\n\n      if (quietStart >= 0) {\n        foundStart = row.isRange(quietStart, start, false);\n      }\n    }\n\n    return startRange;\n  };\n\n  AbstractUPCEANReader.checkChecksum = function (s) {\n    return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n  };\n\n  AbstractUPCEANReader.checkStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    if (length === 0) return false;\n    var check = parseInt(s.charAt(length - 1), 10);\n    return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n  };\n\n  AbstractUPCEANReader.getStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    sum *= 3;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    return (1000 - sum) % 10;\n  };\n\n  AbstractUPCEANReader.decodeEnd = function (row, endStart) {\n    return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n  };\n\n  AbstractUPCEANReader.findGuardPattern = function (row, rowOffset, whiteFirst, pattern, counters) {\n    var width = row.getSize();\n    rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    var patternLength = pattern.length;\n    var isWhite = whiteFirst;\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          if (OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n            return [patternStart, x];\n          }\n\n          patternStart += counters[0] + counters[1];\n          var slice = counters.slice(2, counters.length);\n\n          for (var i = 0; i < counterPosition - 1; i++) {\n            counters[i] = slice[i];\n          }\n\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  AbstractUPCEANReader.decodeDigit = function (row, counters, rowOffset, patterns) {\n    this.recordPattern(row, rowOffset, counters);\n    var bestVariance = this.MAX_AVG_VARIANCE;\n    var bestMatch = -1;\n    var max = patterns.length;\n\n    for (var i = 0; i < max; i++) {\n      var pattern = patterns[i];\n      var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = i;\n      }\n    }\n\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  }; // These two values are critical for determining how permissive the decoding will be.\n  // We've arrived at these values through a lot of trial and error. Setting them any higher\n  // lets false positives creep in quickly.\n\n\n  AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n  AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  /**\n   * Start/end guard pattern.\n   */\n\n  AbstractUPCEANReader.START_END_PATTERN = [1, 1, 1];\n  /**\n   * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n   */\n\n  AbstractUPCEANReader.MIDDLE_PATTERN = [1, 1, 1, 1, 1];\n  /**\n   * end guard pattern.\n   */\n\n  AbstractUPCEANReader.END_PATTERN = [1, 1, 1, 1, 1, 1];\n  /**\n   * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n   */\n\n  AbstractUPCEANReader.L_PATTERNS = [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]];\n  return AbstractUPCEANReader;\n}(OneDReader_1.default);\n\nexports.default = AbstractUPCEANReader;","map":{"version":3,"sources":["../../../src/core/oned/AbstractUPCEANReader.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneDReader_1 = require(\"./OneDReader\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar FormatException_1 = require(\"../FormatException\");\n/**\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n * of one-dimensional barcodes.</p>\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author alasdair@google.com (Alasdair Mackintosh)\n */\nvar AbstractUPCEANReader = /** @class */ (function (_super) {\n    __extends(AbstractUPCEANReader, _super);\n    function AbstractUPCEANReader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.decodeRowStringBuffer = '';\n        return _this;\n    }\n    // private final UPCEANExtensionSupport extensionReader;\n    // private final EANManufacturerOrgSupport eanManSupport;\n    /*\n    protected UPCEANReader() {\n        decodeRowStringBuffer = new StringBuilder(20);\n        extensionReader = new UPCEANExtensionSupport();\n        eanManSupport = new EANManufacturerOrgSupport();\n    }\n    */\n    AbstractUPCEANReader.findStartGuardPattern = function (row) {\n        var foundStart = false;\n        var startRange = null;\n        var nextStart = 0;\n        var counters = [0, 0, 0];\n        while (!foundStart) {\n            counters = [0, 0, 0];\n            startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n            var start = startRange[0];\n            nextStart = startRange[1];\n            var quietStart = start - (nextStart - start);\n            if (quietStart >= 0) {\n                foundStart = row.isRange(quietStart, start, false);\n            }\n        }\n        return startRange;\n    };\n    AbstractUPCEANReader.checkChecksum = function (s) {\n        return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n    };\n    AbstractUPCEANReader.checkStandardUPCEANChecksum = function (s) {\n        var length = s.length;\n        if (length === 0)\n            return false;\n        var check = parseInt(s.charAt(length - 1), 10);\n        return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n    };\n    AbstractUPCEANReader.getStandardUPCEANChecksum = function (s) {\n        var length = s.length;\n        var sum = 0;\n        for (var i = length - 1; i >= 0; i -= 2) {\n            var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            if (digit < 0 || digit > 9) {\n                throw new FormatException_1.default();\n            }\n            sum += digit;\n        }\n        sum *= 3;\n        for (var i = length - 2; i >= 0; i -= 2) {\n            var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            if (digit < 0 || digit > 9) {\n                throw new FormatException_1.default();\n            }\n            sum += digit;\n        }\n        return (1000 - sum) % 10;\n    };\n    AbstractUPCEANReader.decodeEnd = function (row, endStart) {\n        return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n    };\n    AbstractUPCEANReader.findGuardPattern = function (row, rowOffset, whiteFirst, pattern, counters) {\n        var width = row.getSize();\n        rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n        var counterPosition = 0;\n        var patternStart = rowOffset;\n        var patternLength = pattern.length;\n        var isWhite = whiteFirst;\n        for (var x = rowOffset; x < width; x++) {\n            if (row.get(x) !== isWhite) {\n                counters[counterPosition]++;\n            }\n            else {\n                if (counterPosition === patternLength - 1) {\n                    if (OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n                        return [patternStart, x];\n                    }\n                    patternStart += counters[0] + counters[1];\n                    var slice = counters.slice(2, counters.length);\n                    for (var i = 0; i < counterPosition - 1; i++) {\n                        counters[i] = slice[i];\n                    }\n                    counters[counterPosition - 1] = 0;\n                    counters[counterPosition] = 0;\n                    counterPosition--;\n                }\n                else {\n                    counterPosition++;\n                }\n                counters[counterPosition] = 1;\n                isWhite = !isWhite;\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    AbstractUPCEANReader.decodeDigit = function (row, counters, rowOffset, patterns) {\n        this.recordPattern(row, rowOffset, counters);\n        var bestVariance = this.MAX_AVG_VARIANCE;\n        var bestMatch = -1;\n        var max = patterns.length;\n        for (var i = 0; i < max; i++) {\n            var pattern = patterns[i];\n            var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n            if (variance < bestVariance) {\n                bestVariance = variance;\n                bestMatch = i;\n            }\n        }\n        if (bestMatch >= 0) {\n            return bestMatch;\n        }\n        else {\n            throw new NotFoundException_1.default();\n        }\n    };\n    // These two values are critical for determining how permissive the decoding will be.\n    // We've arrived at these values through a lot of trial and error. Setting them any higher\n    // lets false positives creep in quickly.\n    AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n    AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n    /**\n     * Start/end guard pattern.\n     */\n    AbstractUPCEANReader.START_END_PATTERN = [1, 1, 1];\n    /**\n     * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n     */\n    AbstractUPCEANReader.MIDDLE_PATTERN = [1, 1, 1, 1, 1];\n    /**\n     * end guard pattern.\n     */\n    AbstractUPCEANReader.END_PATTERN = [1, 1, 1, 1, 1, 1];\n    /**\n     * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n     */\n    AbstractUPCEANReader.L_PATTERNS = [\n        [3, 2, 1, 1],\n        [2, 2, 2, 1],\n        [2, 1, 2, 2],\n        [1, 4, 1, 1],\n        [1, 1, 3, 2],\n        [1, 2, 3, 1],\n        [1, 1, 1, 4],\n        [1, 3, 1, 2],\n        [1, 2, 1, 3],\n        [3, 1, 1, 2],\n    ];\n    return AbstractUPCEANReader;\n}(OneDReader_1.default));\nexports.default = AbstractUPCEANReader;\n//# sourceMappingURL=AbstractUPCEANReader.js.map"]},"metadata":{},"sourceType":"script"}