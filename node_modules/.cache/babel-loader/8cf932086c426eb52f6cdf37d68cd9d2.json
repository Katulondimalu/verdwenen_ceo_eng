{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { onValue, ref } from 'firebase/database';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nexport let useTimeout = timeout_ms => {\n  _s();\n\n  let [is_timeout, set_is_timeout] = React.useState(false);\n  React.useEffect(() => {\n    let timeout = setTimeout(() => {\n      set_is_timeout(true);\n    }, timeout_ms);\n    return () => {\n      clearTimeout(timeout);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return is_timeout;\n};\n/** @returns {React.MutableRefObject<HTMLDialogElement>} */\n\n_s(useTimeout, \"6WZr4/BRGUqZGIz2UQentM0sbnc=\");\n\nexport let useDialogRef = () => {\n  _s2();\n\n  return React.useRef();\n};\n\n_s2(useDialogRef, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n\nexport let useConnected = database => {\n  _s3();\n\n  let [is_connected, set_is_connected] = React.useState(true);\n  const connectedRef = ref(database, '.info/connected');\n  React.useEffect(() => {\n    let unsubscribe = onValue(connectedRef, snap => {\n      set_is_connected(snap.val());\n    });\n    return () => {\n      unsubscribe();\n    };\n  });\n  return is_connected;\n};\n\n_s3(useConnected, \"TEmEOAKjbYIRrCh9qoA0bUWDbS4=\");\n\nexport let useDate = function () {\n  _s4();\n\n  let every_ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  let [date, set_date] = React.useState(Date.now());\n  React.useEffect(() => {\n    let interval = setInterval(() => {\n      set_date(Date.now());\n    }, every_ms);\n    return () => {\n      clearInterval(interval);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return date;\n};\n\n_s4(useDate, \"+LwEfPeQCXnS+tSrQy4cWkeJqIs=\");\n\nlet warnings_given = new Map();\nexport function with_translation(translations) {\n  var _s5 = $RefreshSig$();\n\n  return _s5(function useTranslation() {\n    _s5();\n\n    let overwrite_language = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let {\n      language: language_from_params\n    } = useParams();\n    let language = overwrite_language !== null && overwrite_language !== void 0 ? overwrite_language : language_from_params;\n    return english => {\n      let sentence_translations = translations[english];\n\n      if (sentence_translations == null) {\n        if (!warnings_given.has(english)) {\n          //console.log(`ü§∑‚Äç‚ôÄÔ∏èüìñ No translation found for \"${english}\"`);\n          warnings_given.set(english, true);\n        }\n\n        return english;\n      }\n\n      let translation = sentence_translations[language];\n\n      if (translation == null) {\n        if (!warnings_given.has(`${english}/${language}`)) {\n          console.warn(`No \"${language}\" translation found for \"${english}\"`);\n          warnings_given.set(`${english}/${language}`, true);\n        }\n\n        return english;\n      }\n\n      return translation;\n    };\n  }, \"F8f284GYeMOmNvLRcrBIue1qjAw=\", false, function () {\n    return [useParams];\n  });\n}","map":{"version":3,"names":["onValue","ref","React","useParams","useTimeout","timeout_ms","is_timeout","set_is_timeout","useState","useEffect","timeout","setTimeout","clearTimeout","useDialogRef","useRef","useConnected","database","is_connected","set_is_connected","connectedRef","unsubscribe","snap","val","useDate","every_ms","date","set_date","Date","now","interval","setInterval","clearInterval","warnings_given","Map","with_translation","translations","useTranslation","overwrite_language","language","language_from_params","english","sentence_translations","has","set","translation","console","warn"],"sources":["/Users/stichtinghelden/Documents/GitHub/patient_0_eng/patient0eng/src/utils/use.js"],"sourcesContent":["import { onValue, ref } from 'firebase/database';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport let useTimeout = (timeout_ms) => {\n  let [is_timeout, set_is_timeout] = React.useState(false);\n\n  React.useEffect(() => {\n    let timeout = setTimeout(() => {\n      set_is_timeout(true);\n    }, timeout_ms);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return is_timeout;\n};\n\n/** @returns {React.MutableRefObject<HTMLDialogElement>} */\nexport let useDialogRef = () => {\n  return React.useRef();\n};\n\nexport let useConnected = (database) => {\n  let [is_connected, set_is_connected] = React.useState(true);\n  const connectedRef = ref(database, '.info/connected');\n  React.useEffect(() => {\n    let unsubscribe = onValue(connectedRef, (snap) => {\n      set_is_connected(snap.val());\n    });\n    return () => {\n      unsubscribe();\n    };\n  });\n  return is_connected;\n};\n\nexport let useDate = (every_ms = 1000) => {\n  let [date, set_date] = React.useState(Date.now());\n\n  React.useEffect(() => {\n    let interval = setInterval(() => {\n      set_date(Date.now());\n    }, every_ms);\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return date;\n};\n\nlet warnings_given = new Map();\n\nexport function with_translation(translations) {\n  return function useTranslation(overwrite_language = null) {\n    let { language: language_from_params } = useParams();\n\n    let language = overwrite_language ?? language_from_params;\n\n    return (english) => {\n      let sentence_translations = translations[english];\n\n      if (sentence_translations == null) {\n        if (!warnings_given.has(english)) {\n          //console.log(`ü§∑‚Äç‚ôÄÔ∏èüìñ No translation found for \"${english}\"`);\n          warnings_given.set(english, true);\n        }\n        return english;\n      }\n\n      let translation = sentence_translations[language];\n\n      if (translation == null) {\n        if (!warnings_given.has(`${english}/${language}`)) {\n          console.warn(`No \"${language}\" translation found for \"${english}\"`);\n          warnings_given.set(`${english}/${language}`, true);\n        }\n\n        return english;\n      }\n\n      return translation;\n    };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}