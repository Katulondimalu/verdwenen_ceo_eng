{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\n\n\nvar QRCode =\n/** @class */\nfunction () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n\n\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder_1.default(); // (200)\n\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n\n    result.append('>>\\n');\n    return result.toString();\n  };\n\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n\n  QRCode.prototype.setMaskPattern = function (value\n  /*int*/\n  ) {\n    this.maskPattern = value;\n  };\n\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  }; // Check if \"mask_pattern\" is valid.\n\n\n  QRCode.isValidMaskPattern = function (maskPattern\n  /*int*/\n  ) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\n\nexports.default = QRCode;","map":{"version":3,"sources":["../../../../src/core/qrcode/encoder/QRCode.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAOH,IAAA,eAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAGA;;;AAGG;;;AACH,IAAA,MAAA;AAAA;AAAA,YAAA;EAUI,SAAA,MAAA,GAAA;IACI,KAAK,WAAL,GAAmB,CAAC,CAApB;EACH;;EAEM,MAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;IACI,OAAO,KAAK,IAAZ;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAP,YAAA;IACI,OAAO,KAAK,OAAZ;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAP,YAAA;IACI,OAAO,KAAK,OAAZ;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;IACI,OAAO,KAAK,WAAZ;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;IACI,OAAO,KAAK,MAAZ;EACH,CAFM;EAIP;;;EACO,MAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;IACI,IAAM,MAAM,GAAG,IAAI,eAAA,CAAA,OAAJ,EAAf,CADJ,CACwC;;IACpC,MAAM,CAAC,MAAP,CAAc,MAAd;IACA,MAAM,CAAC,MAAP,CAAc,SAAd;IACA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,QAAV,EAAZ,GAAmC,MAAjD;IACA,MAAM,CAAC,MAAP,CAAc,cAAd;IACA,MAAM,CAAC,MAAP,CAAc,KAAK,OAAL,GAAe,KAAK,OAAL,CAAa,QAAb,EAAf,GAAyC,MAAvD;IACA,MAAM,CAAC,MAAP,CAAc,cAAd;IACA,MAAM,CAAC,MAAP,CAAc,KAAK,OAAL,GAAe,KAAK,OAAL,CAAa,QAAb,EAAf,GAAyC,MAAvD;IACA,MAAM,CAAC,MAAP,CAAc,kBAAd;IACA,MAAM,CAAC,MAAP,CAAc,KAAK,WAAL,CAAiB,QAAjB,EAAd;;IACA,IAAI,KAAK,MAAT,EAAiB;MACb,MAAM,CAAC,MAAP,CAAc,cAAd;MACA,MAAM,CAAC,MAAP,CAAc,KAAK,MAAL,CAAY,QAAZ,EAAd;IACH,CAHD,MAGO;MACH,MAAM,CAAC,MAAP,CAAc,mBAAd;IACH;;IACD,MAAM,CAAC,MAAP,CAAc,MAAd;IACA,OAAO,MAAM,CAAC,QAAP,EAAP;EACH,CAnBM;;EAqBA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,KAAf,EAA0B;IACtB,KAAK,IAAL,GAAY,KAAZ;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,KAAlB,EAA6C;IACzC,KAAK,OAAL,GAAe,KAAf;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAkC;IAC9B,KAAK,OAAL,GAAe,OAAf;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB;EAAc;EAApC,EAA2C;IACvC,KAAK,WAAL,GAAmB,KAAnB;EACH,CAFM;;EAIA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,KAAjB,EAAkC;IAC9B,KAAK,MAAL,GAAc,KAAd;EACH,CAFM,CAxEX,CA4EI;;;EACc,MAAA,CAAA,kBAAA,GAAd,UAAiC;EAAoB;EAArD,EAA4D;IACxD,OAAO,WAAW,IAAI,CAAf,IAAoB,WAAW,GAAG,MAAM,CAAC,iBAAhD;EACH,CAFa;;EA3EA,MAAA,CAAA,iBAAA,GAAoB,CAApB;EA+ElB,OAAA,MAAA;AAAC,CAjFD,EAAA;;kBAAqB,M","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\nvar QRCode = /** @class */ (function () {\n    function QRCode() {\n        this.maskPattern = -1;\n    }\n    QRCode.prototype.getMode = function () {\n        return this.mode;\n    };\n    QRCode.prototype.getECLevel = function () {\n        return this.ecLevel;\n    };\n    QRCode.prototype.getVersion = function () {\n        return this.version;\n    };\n    QRCode.prototype.getMaskPattern = function () {\n        return this.maskPattern;\n    };\n    QRCode.prototype.getMatrix = function () {\n        return this.matrix;\n    };\n    /*@Override*/\n    QRCode.prototype.toString = function () {\n        var result = new StringBuilder_1.default(); // (200)\n        result.append('<<\\n');\n        result.append(' mode: ');\n        result.append(this.mode ? this.mode.toString() : 'null');\n        result.append('\\n ecLevel: ');\n        result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n        result.append('\\n version: ');\n        result.append(this.version ? this.version.toString() : 'null');\n        result.append('\\n maskPattern: ');\n        result.append(this.maskPattern.toString());\n        if (this.matrix) {\n            result.append('\\n matrix:\\n');\n            result.append(this.matrix.toString());\n        }\n        else {\n            result.append('\\n matrix: null\\n');\n        }\n        result.append('>>\\n');\n        return result.toString();\n    };\n    QRCode.prototype.setMode = function (value) {\n        this.mode = value;\n    };\n    QRCode.prototype.setECLevel = function (value) {\n        this.ecLevel = value;\n    };\n    QRCode.prototype.setVersion = function (version) {\n        this.version = version;\n    };\n    QRCode.prototype.setMaskPattern = function (value /*int*/) {\n        this.maskPattern = value;\n    };\n    QRCode.prototype.setMatrix = function (value) {\n        this.matrix = value;\n    };\n    // Check if \"mask_pattern\" is valid.\n    QRCode.isValidMaskPattern = function (maskPattern /*int*/) {\n        return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n    };\n    QRCode.NUM_MASK_PATTERNS = 8;\n    return QRCode;\n}());\nexports.default = QRCode;\n//# sourceMappingURL=QRCode.js.map"]},"metadata":{},"sourceType":"script"}