{"ast":null,"code":"/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n\n/* vim: set ts=2: */\n\n/*jshint eqnull:true */\n\n/*exported CFB */\n\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0,\n      c2 = 0,\n      c3 = 0,\n      e1 = 0,\n      e2 = 0,\n      e3 = 0,\n      e4 = 0;\n\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) e3 = e4 = 64;else if (isNaN(c3)) e4 = 64;\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n\n  return o;\n}\n\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0,\n      c2 = 0,\n      c3 = 0,\n      e1 = 0,\n      e2 = 0,\n      e3 = 0,\n      e4 = 0;\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n\n  for (var i = 0; i < input.length;) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) o += String.fromCharCode(c2);\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) o += String.fromCharCode(c3);\n  }\n\n  return o;\n}\n\nvar has_buf = function () {\n  return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node;\n}();\n\nvar Buffer_from = function () {\n  if (typeof Buffer !== 'undefined') {\n    var nbfs = !Buffer.from;\n    if (!nbfs) try {\n      Buffer.from(\"foo\", \"utf8\");\n    } catch (e) {\n      nbfs = true;\n    }\n    return nbfs ? function (buf, enc) {\n      return enc ? new Buffer(buf, enc) : new Buffer(buf);\n    } : Buffer.from.bind(Buffer);\n  }\n\n  return function () {};\n}();\n\nfunction new_raw_buf(len) {\n  /* jshint -W056 */\n  if (has_buf) {\n    if (Buffer.alloc) return Buffer.alloc(len);\n    var b = new Buffer(len);\n    b.fill(0);\n    return b;\n  }\n\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\n\nvar s2a = function s2a(s) {\n  if (has_buf) return Buffer_from(s, \"binary\");\n  return s.split(\"\").map(function (x) {\n    return x.charCodeAt(0) & 0xff;\n  });\n};\n\nvar chr0 = /\\u0000/g,\n    chr1 = /[\\u0001-\\u0006]/g;\n\nvar __toBuffer = function (bufs) {\n  var x = [];\n\n  for (var i = 0; i < bufs[0].length; ++i) {\n    x.push.apply(x, bufs[0][i]);\n  }\n\n  return x;\n};\n\nvar ___toBuffer = __toBuffer;\n\nvar __utf16le = function (b, s, e) {\n  var ss = [];\n\n  for (var i = s; i < e; i += 2) ss.push(String.fromCharCode(__readUInt16LE(b, i)));\n\n  return ss.join(\"\").replace(chr0, '');\n};\n\nvar ___utf16le = __utf16le;\n\nvar __hexlify = function (b, s, l) {\n  var ss = [];\n\n  for (var i = s; i < s + l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2));\n\n  return ss.join(\"\");\n};\n\nvar ___hexlify = __hexlify;\n\nvar __bconcat = function (bufs) {\n  if (Array.isArray(bufs[0])) return [].concat.apply([], bufs);\n  var maxlen = 0,\n      i = 0;\n\n  for (i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\n  var o = new Uint8Array(maxlen);\n\n  for (i = 0, maxlen = 0; i < bufs.length; maxlen += bufs[i].length, ++i) o.set(bufs[i], maxlen);\n\n  return o;\n};\n\nvar bconcat = __bconcat;\n\nif (has_buf) {\n  __utf16le = function (b, s, e) {\n    if (!Buffer.isBuffer(b)) return ___utf16le(b, s, e);\n    return b.toString('utf16le', s, e).replace(chr0, '')\n    /*.replace(chr1,'!')*/\n    ;\n  };\n\n  __hexlify = function (b, s, l) {\n    return Buffer.isBuffer(b) ? b.toString('hex', s, s + l) : ___hexlify(b, s, l);\n  };\n\n  __toBuffer = function (bufs) {\n    return bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0]) ? Buffer.concat(bufs[0]) : ___toBuffer(bufs);\n  };\n\n  s2a = function (s) {\n    return Buffer_from(s, \"binary\");\n  };\n\n  bconcat = function (bufs) {\n    return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : __bconcat(bufs);\n  };\n}\n\nvar __readUInt8 = function (b, idx) {\n  return b[idx];\n};\n\nvar __readUInt16LE = function (b, idx) {\n  return b[idx + 1] * (1 << 8) + b[idx];\n};\n\nvar __readInt16LE = function (b, idx) {\n  var u = b[idx + 1] * (1 << 8) + b[idx];\n  return u < 0x8000 ? u : (0xffff - u + 1) * -1;\n};\n\nvar __readUInt32LE = function (b, idx) {\n  return b[idx + 3] * (1 << 24) + (b[idx + 2] << 16) + (b[idx + 1] << 8) + b[idx];\n};\n\nvar __readInt32LE = function (b, idx) {\n  return (b[idx + 3] << 24) + (b[idx + 2] << 16) + (b[idx + 1] << 8) + b[idx];\n};\n\nfunction ReadShift(size, t) {\n  var oI,\n      oS,\n      type = 0;\n\n  switch (size) {\n    case 1:\n      oI = __readUInt8(this, this.l);\n      break;\n\n    case 2:\n      oI = (t !== 'i' ? __readUInt16LE : __readInt16LE)(this, this.l);\n      break;\n\n    case 4:\n      oI = __readInt32LE(this, this.l);\n      break;\n\n    case 16:\n      type = 2;\n      oS = __hexlify(this, this.l, size);\n  }\n\n  this.l += size;\n  if (type === 0) return oI;\n  return oS;\n}\n\nvar __writeUInt32LE = function (b, val, idx) {\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n  b[idx + 2] = val >>> 16 & 0xFF;\n  b[idx + 3] = val >>> 24 & 0xFF;\n};\n\nvar __writeInt32LE = function (b, val, idx) {\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >> 8 & 0xFF;\n  b[idx + 2] = val >> 16 & 0xFF;\n  b[idx + 3] = val >> 24 & 0xFF;\n};\n\nfunction WriteShift(t, val, f) {\n  var size = 0,\n      i = 0;\n\n  switch (f) {\n    case \"hex\":\n      for (; i < t; ++i) {\n        this[this.l++] = parseInt(val.slice(2 * i, 2 * i + 2), 16) || 0;\n      }\n\n      return this;\n\n    case \"utf16le\":\n      var end = this.l + t;\n\n      for (i = 0; i < Math.min(val.length, t); ++i) {\n        var cc = val.charCodeAt(i);\n        this[this.l++] = cc & 0xff;\n        this[this.l++] = cc >> 8;\n      }\n\n      while (this.l < end) this[this.l++] = 0;\n\n      return this;\n  }\n\n  switch (t) {\n    case 1:\n      size = 1;\n      this[this.l] = val & 0xFF;\n      break;\n\n    case 2:\n      size = 2;\n      this[this.l] = val & 0xFF;\n      val >>>= 8;\n      this[this.l + 1] = val & 0xFF;\n      break;\n\n    case 4:\n      size = 4;\n\n      __writeUInt32LE(this, val, this.l);\n\n      break;\n\n    case -4:\n      size = 4;\n\n      __writeInt32LE(this, val, this.l);\n\n      break;\n  }\n\n  this.l += size;\n  return this;\n}\n\nfunction CheckField(hexstr, fld) {\n  var m = __hexlify(this, this.l, hexstr.length >> 1);\n\n  if (m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n  this.l += hexstr.length >> 1;\n}\n\nfunction prep_blob(blob, pos) {\n  blob.l = pos;\n  blob.read_shift = ReadShift;\n  blob.chk = CheckField;\n  blob.write_shift = WriteShift;\n}\n\nfunction new_buf(sz) {\n  var o = new_raw_buf(sz);\n  prep_blob(o, 0);\n  return o;\n}\n/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n\n/* vim: set ts=2: */\n\n/*exported CRC32 */\n\n\nvar CRC32 = function () {\n  var CRC32 = {};\n  CRC32.version = '1.2.1';\n  /*global Int32Array */\n\n  function signed_crc_table() {\n    var c = 0,\n        table = new Array(256);\n\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n\n  var T0 = signed_crc_table();\n\n  function slice_by_16_tables(T) {\n    var c = 0,\n        v = 0,\n        n = 0,\n        table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096);\n\n    for (n = 0; n != 256; ++n) table[n] = T[n];\n\n    for (n = 0; n != 256; ++n) {\n      v = T[n];\n\n      for (c = 256 + n; c < 4096; c += 256) v = table[c] = v >>> 8 ^ T[v & 0xFF];\n    }\n\n    var out = [];\n\n    for (n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\n    return out;\n  }\n\n  var TT = slice_by_16_tables(T0);\n  var T1 = TT[0],\n      T2 = TT[1],\n      T3 = TT[2],\n      T4 = TT[3],\n      T5 = TT[4];\n  var T6 = TT[5],\n      T7 = TT[6],\n      T8 = TT[7],\n      T9 = TT[8],\n      Ta = TT[9];\n  var Tb = TT[10],\n      Tc = TT[11],\n      Td = TT[12],\n      Te = TT[13],\n      Tf = TT[14];\n\n  function crc32_bstr(bstr, seed) {\n    var C = seed ^ -1;\n\n    for (var i = 0, L = bstr.length; i < L;) C = C >>> 8 ^ T0[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n\n    return ~C;\n  }\n\n  function crc32_buf(B, seed) {\n    var C = seed ^ -1,\n        L = B.length - 15,\n        i = 0;\n\n    for (; i < L;) C = Tf[B[i++] ^ C & 255] ^ Te[B[i++] ^ C >> 8 & 255] ^ Td[B[i++] ^ C >> 16 & 255] ^ Tc[B[i++] ^ C >>> 24] ^ Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^ T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^ T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\n    L += 15;\n\n    while (i < L) C = C >>> 8 ^ T0[(C ^ B[i++]) & 0xFF];\n\n    return ~C;\n  }\n\n  function crc32_str(str, seed) {\n    var C = seed ^ -1;\n\n    for (var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n      c = str.charCodeAt(i++);\n\n      if (c < 0x80) {\n        C = C >>> 8 ^ T0[(C ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        C = C >>> 8 ^ T0[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        C = C >>> 8 ^ T0[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d & 63)) & 0xFF];\n      } else {\n        C = C >>> 8 ^ T0[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n\n    return ~C;\n  }\n\n  CRC32.table = T0;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n  return CRC32;\n}();\n/* [MS-CFB] v20171201 */\n\n\nvar CFB = function _CFB() {\n  var exports = {};\n  exports.version = '1.2.2';\n  /* [MS-CFB] 2.6.4 */\n\n  function namecmp(l, r) {\n    var L = l.split(\"/\"),\n        R = r.split(\"/\");\n\n    for (var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n      if (c = L[i].length - R[i].length) return c;\n      if (L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n    }\n\n    return L.length - R.length;\n  }\n\n  function dirname(p) {\n    if (p.charAt(p.length - 1) == \"/\") return p.slice(0, -1).indexOf(\"/\") === -1 ? p : dirname(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(0, c + 1);\n  }\n\n  function filename(p) {\n    if (p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(c + 1);\n  }\n  /* -------------------------------------------------------------------------- */\n\n  /* DOS Date format:\n     high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n     add 1980 to stored year\n     stored second should be doubled\n  */\n\n  /* write JS date to buf as a DOS date */\n\n\n  function write_dos_date(buf, date) {\n    if (typeof date === \"string\") date = new Date(date);\n    var hms = date.getHours();\n    hms = hms << 6 | date.getMinutes();\n    hms = hms << 5 | date.getSeconds() >>> 1;\n    buf.write_shift(2, hms);\n    var ymd = date.getFullYear() - 1980;\n    ymd = ymd << 4 | date.getMonth() + 1;\n    ymd = ymd << 5 | date.getDate();\n    buf.write_shift(2, ymd);\n  }\n  /* read four bytes from buf and interpret as a DOS date */\n\n\n  function parse_dos_date(buf) {\n    var hms = buf.read_shift(2) & 0xFFFF;\n    var ymd = buf.read_shift(2) & 0xFFFF;\n    var val = new Date();\n    var d = ymd & 0x1F;\n    ymd >>>= 5;\n    var m = ymd & 0x0F;\n    ymd >>>= 4;\n    val.setMilliseconds(0);\n    val.setFullYear(ymd + 1980);\n    val.setMonth(m - 1);\n    val.setDate(d);\n    var S = hms & 0x1F;\n    hms >>>= 5;\n    var M = hms & 0x3F;\n    hms >>>= 6;\n    val.setHours(hms);\n    val.setMinutes(M);\n    val.setSeconds(S << 1);\n    return val;\n  }\n\n  function parse_extra_field(blob) {\n    prep_blob(blob, 0);\n    var o = {};\n    var flags = 0;\n\n    while (blob.l <= blob.length - 4) {\n      var type = blob.read_shift(2);\n      var sz = blob.read_shift(2),\n          tgt = blob.l + sz;\n      var p = {};\n\n      switch (type) {\n        /* UNIX-style Timestamps */\n        case 0x5455:\n          {\n            flags = blob.read_shift(1);\n            if (flags & 1) p.mtime = blob.read_shift(4);\n            /* for some reason, CD flag corresponds to LFH */\n\n            if (sz > 5) {\n              if (flags & 2) p.atime = blob.read_shift(4);\n              if (flags & 4) p.ctime = blob.read_shift(4);\n            }\n\n            if (p.mtime) p.mt = new Date(p.mtime * 1000);\n          }\n          break;\n      }\n\n      blob.l = tgt;\n      o[type] = p;\n    }\n\n    return o;\n  }\n\n  var fs;\n\n  function get_fs() {\n    return fs || (fs = require('fs'));\n  }\n\n  function parse(file, options) {\n    if (file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\n    if ((file[0] | 0x20) == 0x6d && (file[1] | 0x20) == 0x69) return parse_mad(file, options);\n    if (file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\n    var mver = 3;\n    var ssz = 512;\n    var nmfs = 0; // number of mini FAT sectors\n\n    var difat_sec_cnt = 0;\n    var dir_start = 0;\n    var minifat_start = 0;\n    var difat_start = 0;\n    var fat_addrs = []; // locations of FAT sectors\n\n    /* [MS-CFB] 2.2 Compound File Header */\n\n    var blob = file.slice(0, 512);\n    prep_blob(blob, 0);\n    /* major version */\n\n    var mv = check_get_mver(blob);\n    mver = mv[0];\n\n    switch (mver) {\n      case 3:\n        ssz = 512;\n        break;\n\n      case 4:\n        ssz = 4096;\n        break;\n\n      case 0:\n        if (mv[1] == 0) return parse_zip(file, options);\n\n      /* falls through */\n\n      default:\n        throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n    }\n    /* reprocess header */\n\n\n    if (ssz !== 512) {\n      blob = file.slice(0, ssz);\n      prep_blob(blob, 28\n      /* blob.l */\n      );\n    }\n    /* Save header for final object */\n\n\n    var header = file.slice(0, ssz);\n    check_shifts(blob, mver); // Number of Directory Sectors\n\n    var dir_cnt = blob.read_shift(4, 'i');\n    if (mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt); // Number of FAT Sectors\n\n    blob.l += 4; // First Directory Sector Location\n\n    dir_start = blob.read_shift(4, 'i'); // Transaction Signature\n\n    blob.l += 4; // Mini Stream Cutoff Size\n\n    blob.chk('00100000', 'Mini Stream Cutoff Size: '); // First Mini FAT Sector Location\n\n    minifat_start = blob.read_shift(4, 'i'); // Number of Mini FAT Sectors\n\n    nmfs = blob.read_shift(4, 'i'); // First DIFAT sector location\n\n    difat_start = blob.read_shift(4, 'i'); // Number of DIFAT Sectors\n\n    difat_sec_cnt = blob.read_shift(4, 'i'); // Grab FAT Sector Locations\n\n    for (var q = -1, j = 0; j < 109; ++j) {\n      /* 109 = (512 - blob.l)>>>2; */\n      q = blob.read_shift(4, 'i');\n      if (q < 0) break;\n      fat_addrs[j] = q;\n    }\n    /** Break the file up into sectors */\n\n\n    var sectors = sectorify(file, ssz);\n    sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n    /** Chains */\n\n    var sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n    sector_list[dir_start].name = \"!Directory\";\n    if (nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\n    sector_list[fat_addrs[0]].name = \"!FAT\";\n    sector_list.fat_addrs = fat_addrs;\n    sector_list.ssz = ssz;\n    /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n\n    var files = {},\n        Paths = [],\n        FileIndex = [],\n        FullPaths = [];\n    read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n    build_full_paths(FileIndex, FullPaths, Paths);\n    Paths.shift();\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    }; // $FlowIgnore\n\n    if (options && options.raw) o.raw = {\n      header: header,\n      sectors: sectors\n    };\n    return o;\n  } // parse\n\n  /* [MS-CFB] 2.2 Compound File Header -- read up to major version */\n\n\n  function check_get_mver(blob) {\n    if (blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0]; // header signature 8\n\n    blob.chk(HEADER_SIGNATURE, 'Header Signature: '); // clsid 16\n    //blob.chk(HEADER_CLSID, 'CLSID: ');\n\n    blob.l += 16; // minor version 2\n\n    var mver = blob.read_shift(2, 'u');\n    return [blob.read_shift(2, 'u'), mver];\n  }\n\n  function check_shifts(blob, mver) {\n    var shift = 0x09; // Byte Order\n    //blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\n    blob.l += 2; // Sector Shift\n\n    switch (shift = blob.read_shift(2)) {\n      case 0x09:\n        if (mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift);\n        break;\n\n      case 0x0c:\n        if (mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift);\n        break;\n\n      default:\n        throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n    } // Mini Sector Shift\n\n\n    blob.chk('0600', 'Mini Sector Shift: '); // Reserved\n\n    blob.chk('000000000000', 'Reserved: ');\n  }\n  /** Break the file up into sectors */\n\n\n  function sectorify(file, ssz) {\n    var nsectors = Math.ceil(file.length / ssz) - 1;\n    var sectors = [];\n\n    for (var i = 1; i < nsectors; ++i) sectors[i - 1] = file.slice(i * ssz, (i + 1) * ssz);\n\n    sectors[nsectors - 1] = file.slice(nsectors * ssz);\n    return sectors;\n  }\n  /* [MS-CFB] 2.6.4 Red-Black Tree */\n\n\n  function build_full_paths(FI, FP, Paths) {\n    var i = 0,\n        L = 0,\n        R = 0,\n        C = 0,\n        j = 0,\n        pl = Paths.length;\n    var dad = [],\n        q = [];\n\n    for (; i < pl; ++i) {\n      dad[i] = q[i] = i;\n      FP[i] = Paths[i];\n    }\n\n    for (; j < q.length; ++j) {\n      i = q[j];\n      L = FI[i].L;\n      R = FI[i].R;\n      C = FI[i].C;\n\n      if (dad[i] === i) {\n        if (L !== -1\n        /*NOSTREAM*/\n        && dad[L] !== L) dad[i] = dad[L];\n        if (R !== -1 && dad[R] !== R) dad[i] = dad[R];\n      }\n\n      if (C !== -1\n      /*NOSTREAM*/\n      ) dad[C] = i;\n\n      if (L !== -1 && i != dad[i]) {\n        dad[L] = dad[i];\n        if (q.lastIndexOf(L) < j) q.push(L);\n      }\n\n      if (R !== -1 && i != dad[i]) {\n        dad[R] = dad[i];\n        if (q.lastIndexOf(R) < j) q.push(R);\n      }\n    }\n\n    for (i = 1; i < pl; ++i) if (dad[i] === i) {\n      if (R !== -1\n      /*NOSTREAM*/\n      && dad[R] !== R) dad[i] = dad[R];else if (L !== -1 && dad[L] !== L) dad[i] = dad[L];\n    }\n\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type === 0\n      /* unknown */\n      ) continue;\n      j = i;\n      if (j != dad[j]) do {\n        j = dad[j];\n        FP[i] = FP[j] + \"/\" + FP[i];\n      } while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n      dad[i] = -1;\n    }\n\n    FP[0] += \"/\";\n\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type !== 2\n      /* stream */\n      ) FP[i] += \"/\";\n    }\n  }\n\n  function get_mfat_entry(entry, payload, mini) {\n    var start = entry.start,\n        size = entry.size; //return (payload.slice(start*MSSZ, start*MSSZ + size));\n\n    var o = [];\n    var idx = start;\n\n    while (mini && size > 0 && idx >= 0) {\n      o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n      size -= MSSZ;\n      idx = __readInt32LE(mini, idx * 4);\n    }\n\n    if (o.length === 0) return new_buf(0);\n    return bconcat(o).slice(0, entry.size);\n  }\n  /** Chase down the rest of the DIFAT chain to build a comprehensive list\n      DIFAT chains by storing the next sector number as the last 32 bits */\n\n\n  function sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\n    var q = ENDOFCHAIN;\n\n    if (idx === ENDOFCHAIN) {\n      if (cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n    } else if (idx !== -1\n    /*FREESECT*/\n    ) {\n      var sector = sectors[idx],\n          m = (ssz >>> 2) - 1;\n      if (!sector) return;\n\n      for (var i = 0; i < m; ++i) {\n        if ((q = __readInt32LE(sector, i * 4)) === ENDOFCHAIN) break;\n        fat_addrs.push(q);\n      }\n\n      if (cnt >= 1) sleuth_fat(__readInt32LE(sector, ssz - 4), cnt - 1, sectors, ssz, fat_addrs);\n    }\n  }\n  /** Follow the linked list of sectors for a given starting point */\n\n\n  function get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\n    var buf = [],\n        buf_chain = [];\n    if (!chkd) chkd = [];\n    var modulus = ssz - 1,\n        j = 0,\n        jj = 0;\n\n    for (j = start; j >= 0;) {\n      chkd[j] = true;\n      buf[buf.length] = j;\n      buf_chain.push(sectors[j]);\n      var addr = fat_addrs[Math.floor(j * 4 / ssz)];\n      jj = j * 4 & modulus;\n      if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n      if (!sectors[addr]) break;\n      j = __readInt32LE(sectors[addr], jj);\n    }\n\n    return {\n      nodes: buf,\n      data: __toBuffer([buf_chain])\n    };\n  }\n  /** Chase down the sector linked lists */\n\n\n  function make_sector_list(sectors, dir_start, fat_addrs, ssz) {\n    var sl = sectors.length,\n        sector_list = [];\n    var chkd = [],\n        buf = [],\n        buf_chain = [];\n    var modulus = ssz - 1,\n        i = 0,\n        j = 0,\n        k = 0,\n        jj = 0;\n\n    for (i = 0; i < sl; ++i) {\n      buf = [];\n      k = i + dir_start;\n      if (k >= sl) k -= sl;\n      if (chkd[k]) continue;\n      buf_chain = [];\n      var seen = [];\n\n      for (j = k; j >= 0;) {\n        seen[j] = true;\n        chkd[j] = true;\n        buf[buf.length] = j;\n        buf_chain.push(sectors[j]);\n        var addr = fat_addrs[Math.floor(j * 4 / ssz)];\n        jj = j * 4 & modulus;\n        if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n        if (!sectors[addr]) break;\n        j = __readInt32LE(sectors[addr], jj);\n        if (seen[j]) break;\n      }\n\n      sector_list[k] = {\n        nodes: buf,\n        data: __toBuffer([buf_chain])\n      };\n    }\n\n    return sector_list;\n  }\n  /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n\n\n  function read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\n    var minifat_store = 0,\n        pl = Paths.length ? 2 : 0;\n    var sector = sector_list[dir_start].data;\n    var i = 0,\n        namelen = 0,\n        name;\n\n    for (; i < sector.length; i += 128) {\n      var blob = sector.slice(i, i + 128);\n      prep_blob(blob, 64);\n      namelen = blob.read_shift(2);\n      name = __utf16le(blob, 0, namelen - pl);\n      Paths.push(name);\n      var o = {\n        name: name,\n        type: blob.read_shift(1),\n        color: blob.read_shift(1),\n        L: blob.read_shift(4, 'i'),\n        R: blob.read_shift(4, 'i'),\n        C: blob.read_shift(4, 'i'),\n        clsid: blob.read_shift(16),\n        state: blob.read_shift(4, 'i'),\n        start: 0,\n        size: 0\n      };\n      var ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (ctime !== 0) o.ct = read_date(blob, blob.l - 8);\n      var mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (mtime !== 0) o.mt = read_date(blob, blob.l - 8);\n      o.start = blob.read_shift(4, 'i');\n      o.size = blob.read_shift(4, 'i');\n\n      if (o.size < 0 && o.start < 0) {\n        o.size = o.type = 0;\n        o.start = ENDOFCHAIN;\n        o.name = \"\";\n      }\n\n      if (o.type === 5) {\n        /* root */\n        minifat_store = o.start;\n        if (nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n        /*minifat_size = o.size;*/\n      } else if (o.size >= 4096\n      /* MSCSZ */\n      ) {\n        o.storage = 'fat';\n        if (sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n        sector_list[o.start].name = o.name;\n        o.content = sector_list[o.start].data.slice(0, o.size);\n      } else {\n        o.storage = 'minifat';\n        if (o.size < 0) o.size = 0;else if (minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n          o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini] || {}).data);\n        }\n      }\n\n      if (o.content) prep_blob(o.content, 0);\n      files[name] = o;\n      FileIndex.push(o);\n    }\n  }\n\n  function read_date(blob, offset) {\n    return new Date((__readUInt32LE(blob, offset + 4) / 1e7 * Math.pow(2, 32) + __readUInt32LE(blob, offset) / 1e7 - 11644473600) * 1000);\n  }\n\n  function read_file(filename, options) {\n    get_fs();\n    return parse(fs.readFileSync(filename), options);\n  }\n\n  function read(blob, options) {\n    var type = options && options.type;\n\n    if (!type) {\n      if (has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n    }\n\n    switch (type || \"base64\") {\n      case \"file\":\n        return read_file(blob, options);\n\n      case \"base64\":\n        return parse(s2a(Base64_decode(blob)), options);\n\n      case \"binary\":\n        return parse(s2a(blob), options);\n    }\n\n    return parse(blob, options);\n  }\n\n  function init_cfb(cfb, opts) {\n    var o = opts || {},\n        root = o.root || \"Root Entry\";\n    if (!cfb.FullPaths) cfb.FullPaths = [];\n    if (!cfb.FileIndex) cfb.FileIndex = [];\n    if (cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\n    if (cfb.FullPaths.length === 0) {\n      cfb.FullPaths[0] = root + \"/\";\n      cfb.FileIndex[0] = {\n        name: root,\n        type: 5\n      };\n    }\n\n    if (o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n    seed_cfb(cfb);\n  }\n\n  function seed_cfb(cfb) {\n    var nm = \"\\u0001Sh33tJ5\";\n    if (CFB.find(cfb, \"/\" + nm)) return;\n    var p = new_buf(4);\n    p[0] = 55;\n    p[1] = p[3] = 50;\n    p[2] = 54;\n    cfb.FileIndex.push({\n      name: nm,\n      type: 2,\n      content: p,\n      size: 4,\n      L: 69,\n      R: 69,\n      C: 69\n    });\n    cfb.FullPaths.push(cfb.FullPaths[0] + nm);\n    rebuild_cfb(cfb);\n  }\n\n  function rebuild_cfb(cfb, f) {\n    init_cfb(cfb);\n    var gc = false,\n        s = false;\n\n    for (var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n      var _file = cfb.FileIndex[i];\n\n      switch (_file.type) {\n        case 0:\n          if (s) gc = true;else {\n            cfb.FileIndex.pop();\n            cfb.FullPaths.pop();\n          }\n          break;\n\n        case 1:\n        case 2:\n        case 5:\n          s = true;\n          if (isNaN(_file.R * _file.L * _file.C)) gc = true;\n          if (_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n          break;\n\n        default:\n          gc = true;\n          break;\n      }\n    }\n\n    if (!gc && !f) return;\n    var now = new Date(1987, 1, 19),\n        j = 0; // Track which names exist\n\n    var fullPaths = Object.create ? Object.create(null) : {};\n    var data = [];\n\n    for (i = 0; i < cfb.FullPaths.length; ++i) {\n      fullPaths[cfb.FullPaths[i]] = true;\n      if (cfb.FileIndex[i].type === 0) continue;\n      data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n    }\n\n    for (i = 0; i < data.length; ++i) {\n      var dad = dirname(data[i][0]);\n      s = fullPaths[dad];\n\n      while (!s) {\n        while (dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n\n        data.push([dad, {\n          name: filename(dad).replace(\"/\", \"\"),\n          type: 1,\n          clsid: HEADER_CLSID,\n          ct: now,\n          mt: now,\n          content: null\n        }]); // Add name to set\n\n        fullPaths[dad] = true;\n        dad = dirname(data[i][0]);\n        s = fullPaths[dad];\n      }\n    }\n\n    data.sort(function (x, y) {\n      return namecmp(x[0], y[0]);\n    });\n    cfb.FullPaths = [];\n    cfb.FileIndex = [];\n\n    for (i = 0; i < data.length; ++i) {\n      cfb.FullPaths[i] = data[i][0];\n      cfb.FileIndex[i] = data[i][1];\n    }\n\n    for (i = 0; i < data.length; ++i) {\n      var elt = cfb.FileIndex[i];\n      var nm = cfb.FullPaths[i];\n      elt.name = filename(nm).replace(\"/\", \"\");\n      elt.L = elt.R = elt.C = -(elt.color = 1);\n      elt.size = elt.content ? elt.content.length : 0;\n      elt.start = 0;\n      elt.clsid = elt.clsid || HEADER_CLSID;\n\n      if (i === 0) {\n        elt.C = data.length > 1 ? 1 : -1;\n        elt.size = 0;\n        elt.type = 5;\n      } else if (nm.slice(-1) == \"/\") {\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == nm) break;\n\n        elt.C = j >= data.length ? -1 : j;\n\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == dirname(nm)) break;\n\n        elt.R = j >= data.length ? -1 : j;\n        elt.type = 1;\n      } else {\n        if (dirname(cfb.FullPaths[i + 1] || \"\") == dirname(nm)) elt.R = i + 1;\n        elt.type = 2;\n      }\n    }\n  }\n\n  function _write(cfb, options) {\n    var _opts = options || {};\n    /* MAD is order-sensitive, skip rebuild and sort */\n\n\n    if (_opts.fileType == 'mad') return write_mad(cfb, _opts);\n    rebuild_cfb(cfb);\n\n    switch (_opts.fileType) {\n      case 'zip':\n        return write_zip(cfb, _opts);\n      //case 'mad': return write_mad(cfb, _opts);\n    }\n\n    var L = function (cfb) {\n      var mini_size = 0,\n          fat_size = 0;\n\n      for (var i = 0; i < cfb.FileIndex.length; ++i) {\n        var file = cfb.FileIndex[i];\n        if (!file.content) continue;\n        var flen = file.content.length;\n\n        if (flen > 0) {\n          if (flen < 0x1000) mini_size += flen + 0x3F >> 6;else fat_size += flen + 0x01FF >> 9;\n        }\n      }\n\n      var dir_cnt = cfb.FullPaths.length + 3 >> 2;\n      var mini_cnt = mini_size + 7 >> 3;\n      var mfat_cnt = mini_size + 0x7F >> 7;\n      var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n      var fat_cnt = fat_base + 0x7F >> 7;\n      var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n\n      while (fat_base + fat_cnt + difat_cnt + 0x7F >> 7 > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n\n      var L = [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n      cfb.FileIndex[0].size = mini_size << 6;\n      L[7] = (cfb.FileIndex[0].start = L[0] + L[1] + L[2] + L[3] + L[4] + L[5]) + (L[6] + 7 >> 3);\n      return L;\n    }(cfb);\n\n    var o = new_buf(L[7] << 9);\n    var i = 0,\n        T = 0;\n    {\n      for (i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\n      for (i = 0; i < 8; ++i) o.write_shift(2, 0);\n\n      o.write_shift(2, 0x003E);\n      o.write_shift(2, 0x0003);\n      o.write_shift(2, 0xFFFE);\n      o.write_shift(2, 0x0009);\n      o.write_shift(2, 0x0006);\n\n      for (i = 0; i < 3; ++i) o.write_shift(2, 0);\n\n      o.write_shift(4, 0);\n      o.write_shift(4, L[2]);\n      o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n      o.write_shift(4, 0);\n      o.write_shift(4, 1 << 12);\n      o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[3]);\n      o.write_shift(-4, L[1] ? L[0] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[1]);\n\n      for (i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n    }\n\n    if (L[1]) {\n      for (T = 0; T < L[1]; ++T) {\n        for (; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\n        o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n      }\n    }\n\n    var chainit = function (w) {\n      for (T += w; i < T - 1; ++i) o.write_shift(-4, i + 1);\n\n      if (w) {\n        ++i;\n        o.write_shift(-4, ENDOFCHAIN);\n      }\n    };\n\n    T = i = 0;\n\n    for (T += L[1]; i < T; ++i) o.write_shift(-4, consts.DIFSECT);\n\n    for (T += L[2]; i < T; ++i) o.write_shift(-4, consts.FATSECT);\n\n    chainit(L[3]);\n    chainit(L[4]);\n    var j = 0,\n        flen = 0;\n    var file = cfb.FileIndex[0];\n\n    for (; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      flen = file.content.length;\n      if (flen < 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x01FF >> 9);\n    }\n\n    chainit(L[6] + 7 >> 3);\n\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\n    T = i = 0;\n\n    for (j = 0; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      flen = file.content.length;\n      if (!flen || flen >= 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x3F >> 6);\n    }\n\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\n    for (i = 0; i < L[4] << 2; ++i) {\n      var nm = cfb.FullPaths[i];\n\n      if (!nm || nm.length === 0) {\n        for (j = 0; j < 17; ++j) o.write_shift(4, 0);\n\n        for (j = 0; j < 3; ++j) o.write_shift(4, -1);\n\n        for (j = 0; j < 12; ++j) o.write_shift(4, 0);\n\n        continue;\n      }\n\n      file = cfb.FileIndex[i];\n      if (i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\n      var _nm = i === 0 && _opts.root || file.name;\n\n      if (_nm.length > 32) {\n        console.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0, 32));\n        _nm = _nm.slice(0, 32);\n      }\n\n      flen = 2 * (_nm.length + 1);\n      o.write_shift(64, _nm, \"utf16le\");\n      o.write_shift(2, flen);\n      o.write_shift(1, file.type);\n      o.write_shift(1, file.color);\n      o.write_shift(-4, file.L);\n      o.write_shift(-4, file.R);\n      o.write_shift(-4, file.C);\n      if (!file.clsid) for (j = 0; j < 4; ++j) o.write_shift(4, 0);else o.write_shift(16, file.clsid, \"hex\");\n      o.write_shift(4, file.state || 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, file.start);\n      o.write_shift(4, file.size);\n      o.write_shift(4, 0);\n    }\n\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n\n      if (file.size >= 0x1000) {\n        o.l = file.start + 1 << 9;\n\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size); // o is a 0-filled Buffer so just set next offset\n\n          o.l += file.size + 511 & -512;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\n          for (; j & 0x1FF; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n\n      if (file.size > 0 && file.size < 0x1000) {\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size); // o is a 0-filled Buffer so just set next offset\n\n          o.l += file.size + 63 & -64;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\n          for (; j & 0x3F; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n\n    if (has_buf) {\n      o.l = o.length;\n    } else {\n      // When using Buffer, already 0-filled\n      while (o.l < o.length) o.write_shift(1, 0);\n    }\n\n    return o;\n  }\n  /* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\n\n\n  function find(cfb, path) {\n    var UCFullPaths = cfb.FullPaths.map(function (x) {\n      return x.toUpperCase();\n    });\n    var UCPaths = UCFullPaths.map(function (x) {\n      var y = x.split(\"/\");\n      return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)];\n    });\n    var k = false;\n\n    if (path.charCodeAt(0) === 47\n    /* \"/\" */\n    ) {\n      k = true;\n      path = UCFullPaths[0].slice(0, -1) + path;\n    } else k = path.indexOf(\"/\") !== -1;\n\n    var UCPath = path.toUpperCase();\n    var w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n    if (w !== -1) return cfb.FileIndex[w];\n    var m = !UCPath.match(chr1);\n    UCPath = UCPath.replace(chr0, '');\n    if (m) UCPath = UCPath.replace(chr1, '!');\n\n    for (w = 0; w < UCFullPaths.length; ++w) {\n      if ((m ? UCFullPaths[w].replace(chr1, '!') : UCFullPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n      if ((m ? UCPaths[w].replace(chr1, '!') : UCPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n    }\n\n    return null;\n  }\n  /** CFB Constants */\n\n\n  var MSSZ = 64;\n  /* Mini Sector Size = 1<<6 */\n  //var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n\n  /* 2.1 Compound File Sector Numbers and Types */\n\n  var ENDOFCHAIN = -2;\n  /* 2.2 Compound File Header */\n\n  var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\n  var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\n  var HEADER_CLSID = '00000000000000000000000000000000';\n  var consts = {\n    /* 2.1 Compund File Sector Numbers and Types */\n    MAXREGSECT: -6,\n    DIFSECT: -4,\n    FATSECT: -3,\n    ENDOFCHAIN: ENDOFCHAIN,\n    FREESECT: -1,\n\n    /* 2.2 Compound File Header */\n    HEADER_SIGNATURE: HEADER_SIGNATURE,\n    HEADER_MINOR_VERSION: '3e00',\n    MAXREGSID: -6,\n    NOSTREAM: -1,\n    HEADER_CLSID: HEADER_CLSID,\n\n    /* 2.6.1 Compound File Directory Entry */\n    EntryTypes: ['unknown', 'storage', 'stream', 'lockbytes', 'property', 'root']\n  };\n\n  function write_file(cfb, filename, options) {\n    get_fs();\n\n    var o = _write(cfb, options);\n\n    fs.writeFileSync(filename, o);\n  }\n\n  function a2s(o) {\n    var out = new Array(o.length);\n\n    for (var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\n    return out.join(\"\");\n  }\n\n  function write(cfb, options) {\n    var o = _write(cfb, options);\n\n    switch (options && options.type || \"buffer\") {\n      case \"file\":\n        get_fs();\n        fs.writeFileSync(options.filename, o);\n        return o;\n\n      case \"binary\":\n        return typeof o == \"string\" ? o : a2s(o);\n\n      case \"base64\":\n        return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\n      case \"buffer\":\n        if (has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\n      /* falls through */\n\n      case \"array\":\n        return typeof o == \"string\" ? s2a(o) : o;\n    }\n\n    return o;\n  }\n  /* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\n\n\n  var _zlib;\n\n  function use_zlib(zlib) {\n    try {\n      var InflateRaw = zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n\n      InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\n      if (InflRaw.bytesRead) _zlib = zlib;else throw new Error(\"zlib does not expose bytesRead\");\n    } catch (e) {\n      console.error(\"cannot use native zlib: \" + (e.message || e));\n    }\n  }\n\n  function _inflateRawSync(payload, usz) {\n    if (!_zlib) return _inflate(payload, usz);\n    var InflateRaw = _zlib.InflateRaw;\n    var InflRaw = new InflateRaw();\n\n    var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\n    payload.l += InflRaw.bytesRead;\n    return out;\n  }\n\n  function _deflateRawSync(payload) {\n    return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n  }\n\n  var CLEN_ORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  /*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\n\n  var LEN_LN = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];\n  /*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\n\n  var DST_LN = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\n  function bit_swap_8(n) {\n    var t = (n << 1 | n << 11) & 0x22110 | (n << 5 | n << 15) & 0x88440;\n    return (t >> 16 | t >> 8 | t) & 0xFF;\n  }\n\n  var use_typed_arrays = typeof Uint8Array !== 'undefined';\n  var bitswap8 = use_typed_arrays ? new Uint8Array(1 << 8) : [];\n\n  for (var q = 0; q < 1 << 8; ++q) bitswap8[q] = bit_swap_8(q);\n\n  function bit_swap_n(n, b) {\n    var rev = bitswap8[n & 0xFF];\n    if (b <= 8) return rev >>> 8 - b;\n    rev = rev << 8 | bitswap8[n >> 8 & 0xFF];\n    if (b <= 16) return rev >>> 16 - b;\n    rev = rev << 8 | bitswap8[n >> 16 & 0xFF];\n    return rev >>> 24 - b;\n  }\n  /* helpers for unaligned bit reads */\n\n\n  function read_bits_2(buf, bl) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    return (buf[h] | (w <= 6 ? 0 : buf[h + 1] << 8)) >>> w & 0x03;\n  }\n\n  function read_bits_3(buf, bl) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    return (buf[h] | (w <= 5 ? 0 : buf[h + 1] << 8)) >>> w & 0x07;\n  }\n\n  function read_bits_4(buf, bl) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    return (buf[h] | (w <= 4 ? 0 : buf[h + 1] << 8)) >>> w & 0x0F;\n  }\n\n  function read_bits_5(buf, bl) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    return (buf[h] | (w <= 3 ? 0 : buf[h + 1] << 8)) >>> w & 0x1F;\n  }\n\n  function read_bits_7(buf, bl) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    return (buf[h] | (w <= 1 ? 0 : buf[h + 1] << 8)) >>> w & 0x7F;\n  }\n  /* works up to n = 3 * 8 + 1 = 25 */\n\n\n  function read_bits_n(buf, bl, n) {\n    var w = bl & 7,\n        h = bl >>> 3,\n        f = (1 << n) - 1;\n    var v = buf[h] >>> w;\n    if (n < 8 - w) return v & f;\n    v |= buf[h + 1] << 8 - w;\n    if (n < 16 - w) return v & f;\n    v |= buf[h + 2] << 16 - w;\n    if (n < 24 - w) return v & f;\n    v |= buf[h + 3] << 24 - w;\n    return v & f;\n  }\n  /* helpers for unaligned bit writes */\n\n\n  function write_bits_3(buf, bl, v) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    if (w <= 5) buf[h] |= (v & 7) << w;else {\n      buf[h] |= v << w & 0xFF;\n      buf[h + 1] = (v & 7) >> 8 - w;\n    }\n    return bl + 3;\n  }\n\n  function write_bits_1(buf, bl, v) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    v = (v & 1) << w;\n    buf[h] |= v;\n    return bl + 1;\n  }\n\n  function write_bits_8(buf, bl, v) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v;\n    return bl + 8;\n  }\n\n  function write_bits_16(buf, bl, v) {\n    var w = bl & 7,\n        h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v & 0xFF;\n    buf[h + 2] = v >>> 8;\n    return bl + 16;\n  }\n  /* until ArrayBuffer#realloc is a thing, fake a realloc */\n\n\n  function realloc(b, sz) {\n    var L = b.length,\n        M = 2 * L > sz ? 2 * L : sz + 5,\n        i = 0;\n    if (L >= sz) return b;\n\n    if (has_buf) {\n      var o = new_unsafe_buf(M); // $FlowIgnore\n\n      if (b.copy) b.copy(o);else for (; i < b.length; ++i) o[i] = b[i];\n      return o;\n    } else if (use_typed_arrays) {\n      var a = new Uint8Array(M);\n      if (a.set) a.set(b);else for (; i < L; ++i) a[i] = b[i];\n      return a;\n    }\n\n    b.length = M;\n    return b;\n  }\n  /* zero-filled arrays for older browsers */\n\n\n  function zero_fill_array(n) {\n    var o = new Array(n);\n\n    for (var i = 0; i < n; ++i) o[i] = 0;\n\n    return o;\n  }\n  /* build tree (used for literals and lengths) */\n\n\n  function build_tree(clens, cmap, MAX) {\n    var maxlen = 1,\n        w = 0,\n        i = 0,\n        j = 0,\n        ccode = 0,\n        L = clens.length;\n    var bl_count = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\n    for (i = 0; i < 32; ++i) bl_count[i] = 0;\n\n    for (i = L; i < MAX; ++i) clens[i] = 0;\n\n    L = clens.length;\n    var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n    /* build code tree */\n\n    for (i = 0; i < L; ++i) {\n      bl_count[w = clens[i]]++;\n      if (maxlen < w) maxlen = w;\n      ctree[i] = 0;\n    }\n\n    bl_count[0] = 0;\n\n    for (i = 1; i <= maxlen; ++i) bl_count[i + 16] = ccode = ccode + bl_count[i - 1] << 1;\n\n    for (i = 0; i < L; ++i) {\n      ccode = clens[i];\n      if (ccode != 0) ctree[i] = bl_count[ccode + 16]++;\n    }\n    /* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\n\n    var cleni = 0;\n\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n\n      if (cleni != 0) {\n        ccode = bit_swap_n(ctree[i], maxlen) >> maxlen - cleni;\n\n        for (j = (1 << maxlen + 4 - cleni) - 1; j >= 0; --j) cmap[ccode | j << cleni] = cleni & 15 | i << 4;\n      }\n    }\n\n    return maxlen;\n  }\n  /* Fixed Huffman */\n\n\n  var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\n  var fix_dmap = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\n  if (!use_typed_arrays) {\n    for (var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\n    for (i = 0; i < 32; ++i) fix_dmap[i] = 0;\n  }\n\n  (function () {\n    var dlens = [];\n    var i = 0;\n\n    for (; i < 32; i++) dlens.push(5);\n\n    build_tree(dlens, fix_dmap, 32);\n    var clens = [];\n    i = 0;\n\n    for (; i <= 143; i++) clens.push(8);\n\n    for (; i <= 255; i++) clens.push(9);\n\n    for (; i <= 279; i++) clens.push(7);\n\n    for (; i <= 287; i++) clens.push(8);\n\n    build_tree(clens, fix_lmap, 288);\n  })();\n\n  var _deflateRaw = function _deflateRawIIFE() {\n    var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n    var j = 0,\n        k = 0;\n\n    for (; j < DST_LN.length - 1; ++j) {\n      for (; k < DST_LN[j + 1]; ++k) DST_LN_RE[k] = j;\n    }\n\n    for (; k < 32768; ++k) DST_LN_RE[k] = 29;\n\n    var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\n    for (j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n      for (; k < LEN_LN[j + 1]; ++k) LEN_LN_RE[k] = j;\n    }\n\n    function write_stored(data, out) {\n      var boff = 0;\n\n      while (boff < data.length) {\n        var L = Math.min(0xFFFF, data.length - boff);\n        var h = boff + L == data.length;\n        out.write_shift(1, +h);\n        out.write_shift(2, L);\n        out.write_shift(2, ~L & 0xFFFF);\n\n        while (L-- > 0) out[out.l++] = data[boff++];\n      }\n\n      return out.l;\n    }\n    /* Fixed Huffman */\n\n\n    function write_huff_fixed(data, out) {\n      var bl = 0;\n      var boff = 0;\n      var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\n      while (boff < data.length) {\n        var L =\n        /* data.length - boff; */\n        Math.min(0xFFFF, data.length - boff);\n        /* write a stored block for short data */\n\n        if (L < 10) {\n          bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\n          if (bl & 7) bl += 8 - (bl & 7);\n          out.l = bl / 8 | 0;\n          out.write_shift(2, L);\n          out.write_shift(2, ~L & 0xFFFF);\n\n          while (L-- > 0) out[out.l++] = data[boff++];\n\n          bl = out.l * 8;\n          continue;\n        }\n\n        bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\n        var hash = 0;\n\n        while (L-- > 0) {\n          var d = data[boff];\n          hash = (hash << 5 ^ d) & 0x7FFF;\n          var match = -1,\n              mlen = 0;\n\n          if (match = addrs[hash]) {\n            match |= boff & ~0x7FFF;\n            if (match > boff) match -= 0x8000;\n            if (match < boff) while (data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n          }\n\n          if (mlen > 2) {\n            /* Copy Token  */\n            d = LEN_LN_RE[mlen];\n            if (d <= 22) bl = write_bits_8(out, bl, bitswap8[d + 1] >> 1) - 1;else {\n              write_bits_8(out, bl, 3);\n              bl += 5;\n              write_bits_8(out, bl, bitswap8[d - 23] >> 5);\n              bl += 3;\n            }\n            var len_eb = d < 8 ? 0 : d - 4 >> 2;\n\n            if (len_eb > 0) {\n              write_bits_16(out, bl, mlen - LEN_LN[d]);\n              bl += len_eb;\n            }\n\n            d = DST_LN_RE[boff - match];\n            bl = write_bits_8(out, bl, bitswap8[d] >> 3);\n            bl -= 3;\n            var dst_eb = d < 4 ? 0 : d - 2 >> 1;\n\n            if (dst_eb > 0) {\n              write_bits_16(out, bl, boff - match - DST_LN[d]);\n              bl += dst_eb;\n            }\n\n            for (var q = 0; q < mlen; ++q) {\n              addrs[hash] = boff & 0x7FFF;\n              hash = (hash << 5 ^ data[boff]) & 0x7FFF;\n              ++boff;\n            }\n\n            L -= mlen - 1;\n          } else {\n            /* Literal Token */\n            if (d <= 143) d = d + 48;else bl = write_bits_1(out, bl, 1);\n            bl = write_bits_8(out, bl, bitswap8[d]);\n            addrs[hash] = boff & 0x7FFF;\n            ++boff;\n          }\n        }\n\n        bl = write_bits_8(out, bl, 0) - 1;\n      }\n\n      out.l = (bl + 7) / 8 | 0;\n      return out.l;\n    }\n\n    return function _deflateRaw(data, out) {\n      if (data.length < 8) return write_stored(data, out);\n      return write_huff_fixed(data, out);\n    };\n  }();\n\n  function _deflate(data) {\n    var buf = new_buf(50 + Math.floor(data.length * 1.1));\n\n    var off = _deflateRaw(data, buf);\n\n    return buf.slice(0, off);\n  }\n  /* modified inflate function also moves original read head */\n\n\n  var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_cmap = use_typed_arrays ? new Uint16Array(128) : zero_fill_array(128);\n  var dyn_len_1 = 1,\n      dyn_len_2 = 1;\n  /* 5.5.3 Expanding Huffman Codes */\n\n  function dyn(data, boff) {\n    /* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n    var _HLIT = read_bits_5(data, boff) + 257;\n\n    boff += 5;\n\n    var _HDIST = read_bits_5(data, boff) + 1;\n\n    boff += 5;\n\n    var _HCLEN = read_bits_4(data, boff) + 4;\n\n    boff += 4;\n    var w = 0;\n    /* grab and store code lengths */\n\n    var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n    var ctree = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var maxlen = 1;\n    var bl_count = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var L = clens.length;\n    /* 19 */\n\n    for (var i = 0; i < _HCLEN; ++i) {\n      clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n      if (maxlen < w) maxlen = w;\n      bl_count[w]++;\n      boff += 3;\n    }\n    /* build code tree */\n\n\n    var ccode = 0;\n    bl_count[0] = 0;\n\n    for (i = 1; i <= maxlen; ++i) next_code[i] = ccode = ccode + bl_count[i - 1] << 1;\n\n    for (i = 0; i < L; ++i) if ((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n    /* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\n\n    var cleni = 0;\n\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n\n      if (cleni != 0) {\n        ccode = bitswap8[ctree[i]] >> 8 - cleni;\n\n        for (var j = (1 << 7 - cleni) - 1; j >= 0; --j) dyn_cmap[ccode | j << cleni] = cleni & 7 | i << 3;\n      }\n    }\n    /* read literal and dist codes at once */\n\n\n    var hcodes = [];\n    maxlen = 1;\n\n    for (; hcodes.length < _HLIT + _HDIST;) {\n      ccode = dyn_cmap[read_bits_7(data, boff)];\n      boff += ccode & 7;\n\n      switch (ccode >>>= 3) {\n        case 16:\n          w = 3 + read_bits_2(data, boff);\n          boff += 2;\n          ccode = hcodes[hcodes.length - 1];\n\n          while (w-- > 0) hcodes.push(ccode);\n\n          break;\n\n        case 17:\n          w = 3 + read_bits_3(data, boff);\n          boff += 3;\n\n          while (w-- > 0) hcodes.push(0);\n\n          break;\n\n        case 18:\n          w = 11 + read_bits_7(data, boff);\n          boff += 7;\n\n          while (w-- > 0) hcodes.push(0);\n\n          break;\n\n        default:\n          hcodes.push(ccode);\n          if (maxlen < ccode) maxlen = ccode;\n          break;\n      }\n    }\n    /* build literal / length trees */\n\n\n    var h1 = hcodes.slice(0, _HLIT),\n        h2 = hcodes.slice(_HLIT);\n\n    for (i = _HLIT; i < 286; ++i) h1[i] = 0;\n\n    for (i = _HDIST; i < 30; ++i) h2[i] = 0;\n\n    dyn_len_1 = build_tree(h1, dyn_lmap, 286);\n    dyn_len_2 = build_tree(h2, dyn_dmap, 30);\n    return boff;\n  }\n  /* return [ data, bytesRead ] */\n\n\n  function inflate(data, usz) {\n    /* shortcircuit for empty buffer [0x03, 0x00] */\n    if (data[0] == 3 && !(data[1] & 0x3)) {\n      return [new_raw_buf(usz), 2];\n    }\n    /* bit offset */\n\n\n    var boff = 0;\n    /* header includes final bit and type bits */\n\n    var header = 0;\n    var outbuf = new_unsafe_buf(usz ? usz : 1 << 18);\n    var woff = 0;\n    var OL = outbuf.length >>> 0;\n    var max_len_1 = 0,\n        max_len_2 = 0;\n\n    while ((header & 1) == 0) {\n      header = read_bits_3(data, boff);\n      boff += 3;\n\n      if (header >>> 1 == 0) {\n        /* Stored block */\n        if (boff & 7) boff += 8 - (boff & 7);\n        /* 2 bytes sz, 2 bytes bit inverse */\n\n        var sz = data[boff >>> 3] | data[(boff >>> 3) + 1] << 8;\n        boff += 32;\n        /* push sz bytes */\n\n        if (sz > 0) {\n          if (!usz && OL < woff + sz) {\n            outbuf = realloc(outbuf, woff + sz);\n            OL = outbuf.length;\n          }\n\n          while (sz-- > 0) {\n            outbuf[woff++] = data[boff >>> 3];\n            boff += 8;\n          }\n        }\n\n        continue;\n      } else if (header >> 1 == 1) {\n        /* Fixed Huffman */\n        max_len_1 = 9;\n        max_len_2 = 5;\n      } else {\n        /* Dynamic Huffman */\n        boff = dyn(data, boff);\n        max_len_1 = dyn_len_1;\n        max_len_2 = dyn_len_2;\n      }\n\n      for (;;) {\n        // while(true) is apparently out of vogue in modern JS circles\n        if (!usz && OL < woff + 32767) {\n          outbuf = realloc(outbuf, woff + 32767);\n          OL = outbuf.length;\n        }\n        /* ingest code and move read head */\n\n\n        var bits = read_bits_n(data, boff, max_len_1);\n        var code = header >>> 1 == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n        boff += code & 15;\n        code >>>= 4;\n        /* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\n        if ((code >>> 8 & 0xFF) === 0) outbuf[woff++] = code;else if (code == 256) break;else {\n          code -= 257;\n          var len_eb = code < 8 ? 0 : code - 4 >> 2;\n          if (len_eb > 5) len_eb = 0;\n          var tgt = woff + LEN_LN[code];\n          /* length extra bits */\n\n          if (len_eb > 0) {\n            tgt += read_bits_n(data, boff, len_eb);\n            boff += len_eb;\n          }\n          /* dist code */\n\n\n          bits = read_bits_n(data, boff, max_len_2);\n          code = header >>> 1 == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n          boff += code & 15;\n          code >>>= 4;\n          var dst_eb = code < 4 ? 0 : code - 2 >> 1;\n          var dst = DST_LN[code];\n          /* dist extra bits */\n\n          if (dst_eb > 0) {\n            dst += read_bits_n(data, boff, dst_eb);\n            boff += dst_eb;\n          }\n          /* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\n\n          if (!usz && OL < tgt) {\n            outbuf = realloc(outbuf, tgt + 100);\n            OL = outbuf.length;\n          }\n\n          while (woff < tgt) {\n            outbuf[woff] = outbuf[woff - dst];\n            ++woff;\n          }\n        }\n      }\n    }\n\n    if (usz) return [outbuf, boff + 7 >>> 3];\n    return [outbuf.slice(0, woff), boff + 7 >>> 3];\n  }\n\n  function _inflate(payload, usz) {\n    var data = payload.slice(payload.l || 0);\n    var out = inflate(data, usz);\n    payload.l += out[1];\n    return out[0];\n  }\n\n  function warn_or_throw(wrn, msg) {\n    if (wrn) {\n      if (typeof console !== 'undefined') console.error(msg);\n    } else throw new Error(msg);\n  }\n\n  function parse_zip(file, options) {\n    var blob = file;\n    prep_blob(blob, 0);\n    var FileIndex = [],\n        FullPaths = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o, {\n      root: options.root\n    });\n    /* find end of central directory, start just after signature */\n\n    var i = blob.length - 4;\n\n    while ((blob[i] != 0x50 || blob[i + 1] != 0x4b || blob[i + 2] != 0x05 || blob[i + 3] != 0x06) && i >= 0) --i;\n\n    blob.l = i + 4;\n    /* parse end of central directory */\n\n    blob.l += 4;\n    var fcnt = blob.read_shift(2);\n    blob.l += 6;\n    var start_cd = blob.read_shift(4);\n    /* parse central directory */\n\n    blob.l = start_cd;\n\n    for (i = 0; i < fcnt; ++i) {\n      /* trust local file header instead of CD entry */\n      blob.l += 20;\n      var csz = blob.read_shift(4);\n      var usz = blob.read_shift(4);\n      var namelen = blob.read_shift(2);\n      var efsz = blob.read_shift(2);\n      var fcsz = blob.read_shift(2);\n      blob.l += 8;\n      var offset = blob.read_shift(4);\n      var EF = parse_extra_field(blob.slice(blob.l + namelen, blob.l + namelen + efsz));\n      blob.l += namelen + efsz + fcsz;\n      var L = blob.l;\n      blob.l = offset + 4;\n      parse_local_file(blob, csz, usz, o, EF);\n      blob.l = L;\n    }\n\n    return o;\n  }\n  /* head starts just after local file header signature */\n\n\n  function parse_local_file(blob, csz, usz, o, EF) {\n    /* [local file header] */\n    blob.l += 2;\n    var flags = blob.read_shift(2);\n    var meth = blob.read_shift(2);\n    var date = parse_dos_date(blob);\n    if (flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n    var crc32 = blob.read_shift(4);\n\n    var _csz = blob.read_shift(4);\n\n    var _usz = blob.read_shift(4);\n\n    var namelen = blob.read_shift(2);\n    var efsz = blob.read_shift(2); // TODO: flags & (1<<11) // UTF8\n\n    var name = \"\";\n\n    for (var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\n    if (efsz) {\n      var ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));\n      if ((ef[0x5455] || {}).mt) date = ef[0x5455].mt;\n      if (((EF || {})[0x5455] || {}).mt) date = EF[0x5455].mt;\n    }\n\n    blob.l += efsz;\n    /* [encryption header] */\n\n    /* [file data] */\n\n    var data = blob.slice(blob.l, blob.l + _csz);\n\n    switch (meth) {\n      case 8:\n        data = _inflateRawSync(blob, _usz);\n        break;\n\n      case 0:\n        break;\n      // TODO: scan for magic number\n\n      default:\n        throw new Error(\"Unsupported ZIP Compression method \" + meth);\n    }\n    /* [data descriptor] */\n\n\n    var wrn = false;\n\n    if (flags & 8) {\n      crc32 = blob.read_shift(4);\n\n      if (crc32 == 0x08074b50) {\n        crc32 = blob.read_shift(4);\n        wrn = true;\n      }\n\n      _csz = blob.read_shift(4);\n      _usz = blob.read_shift(4);\n    }\n\n    if (_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n    if (_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\n    var _crc32 = CRC32.buf(data, 0);\n\n    if (crc32 >> 0 != _crc32 >> 0) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n    cfb_add(o, name, data, {\n      unsafe: true,\n      mt: date\n    });\n  }\n\n  function write_zip(cfb, options) {\n    var _opts = options || {};\n\n    var out = [],\n        cdirs = [];\n    var o = new_buf(1);\n    var method = _opts.compression ? 8 : 0,\n        flags = 0;\n    var desc = false;\n    if (desc) flags |= 8;\n    var i = 0,\n        j = 0;\n    var start_cd = 0,\n        fcnt = 0;\n    var root = cfb.FullPaths[0],\n        fp = root,\n        fi = cfb.FileIndex[0];\n    var crcs = [];\n    var sz_cd = 0;\n\n    for (i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n      var start = start_cd;\n      /* TODO: CP437 filename */\n\n      var namebuf = new_buf(fp.length);\n\n      for (j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\n      namebuf = namebuf.slice(0, namebuf.l);\n      crcs[fcnt] = CRC32.buf(fi.content, 0);\n      var outbuf = fi.content;\n      if (method == 8) outbuf = _deflateRawSync(outbuf);\n      /* local file header */\n\n      o = new_buf(30);\n      o.write_shift(4, 0x04034b50);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      /* TODO: last mod file time/date */\n\n      if (fi.mt) write_dos_date(o, fi.mt);else o.write_shift(4, 0);\n      o.write_shift(-4, flags & 8 ? 0 : crcs[fcnt]);\n      o.write_shift(4, flags & 8 ? 0 : outbuf.length);\n      o.write_shift(4, flags & 8 ? 0 : fi.content.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      start_cd += o.length;\n      out.push(o);\n      start_cd += namebuf.length;\n      out.push(namebuf);\n      /* TODO: extra fields? */\n\n      /* TODO: encryption header ? */\n\n      start_cd += outbuf.length;\n      out.push(outbuf);\n      /* data descriptor */\n\n      if (flags & 8) {\n        o = new_buf(12);\n        o.write_shift(-4, crcs[fcnt]);\n        o.write_shift(4, outbuf.length);\n        o.write_shift(4, fi.content.length);\n        start_cd += o.l;\n        out.push(o);\n      }\n      /* central directory */\n\n\n      o = new_buf(46);\n      o.write_shift(4, 0x02014b50);\n      o.write_shift(2, 0);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      o.write_shift(4, 0);\n      /* TODO: last mod file time/date */\n\n      o.write_shift(-4, crcs[fcnt]);\n      o.write_shift(4, outbuf.length);\n      o.write_shift(4, fi.content.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, start);\n      sz_cd += o.l;\n      cdirs.push(o);\n      sz_cd += namebuf.length;\n      cdirs.push(namebuf);\n      ++fcnt;\n    }\n    /* end of central directory */\n\n\n    o = new_buf(22);\n    o.write_shift(4, 0x06054b50);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, fcnt);\n    o.write_shift(2, fcnt);\n    o.write_shift(4, sz_cd);\n    o.write_shift(4, start_cd);\n    o.write_shift(2, 0);\n    return bconcat([bconcat(out), bconcat(cdirs), o]);\n  }\n\n  var ContentTypeMap = {\n    \"htm\": \"text/html\",\n    \"xml\": \"text/xml\",\n    \"gif\": \"image/gif\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"mso\": \"application/x-mso\",\n    \"thmx\": \"application/vnd.ms-officetheme\",\n    \"sh33tj5\": \"application/octet-stream\"\n  };\n\n  function get_content_type(fi, fp) {\n    if (fi.ctype) return fi.ctype;\n    var ext = fi.name || \"\",\n        m = ext.match(/\\.([^\\.]+)$/);\n    if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n    if (fp) {\n      m = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n      if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    }\n\n    return \"application/octet-stream\";\n  }\n  /* 76 character chunks TODO: intertwine encoding */\n\n\n  function write_base64_76(bstr) {\n    var data = Base64_encode(bstr);\n    var o = [];\n\n    for (var i = 0; i < data.length; i += 76) o.push(data.slice(i, i + 76));\n\n    return o.join(\"\\r\\n\") + \"\\r\\n\";\n  }\n  /*\n  Rules for QP:\n  \t- escape =## applies for all non-display characters and literal \"=\"\n  \t- space or tab at end of line must be encoded\n  \t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n  \t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n  \n  TODO: Some files from word appear to write line extensions with bare equals:\n  \n  ```\n  <table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n  =\"70%\"\n  ```\n  */\n\n\n  function write_quoted_printable(text) {\n    var encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function (c) {\n      var w = c.charCodeAt(0).toString(16).toUpperCase();\n      return \"=\" + (w.length == 1 ? \"0\" + w : w);\n    });\n    encoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n    if (encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n    encoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n    var o = [],\n        split = encoded.split(\"\\r\\n\");\n\n    for (var si = 0; si < split.length; ++si) {\n      var str = split[si];\n\n      if (str.length == 0) {\n        o.push(\"\");\n        continue;\n      }\n\n      for (var i = 0; i < str.length;) {\n        var end = 76;\n        var tmp = str.slice(i, i + end);\n        if (tmp.charAt(end - 1) == \"=\") end--;else if (tmp.charAt(end - 2) == \"=\") end -= 2;else if (tmp.charAt(end - 3) == \"=\") end -= 3;\n        tmp = str.slice(i, i + end);\n        i += end;\n        if (i < str.length) tmp += \"=\";\n        o.push(tmp);\n      }\n    }\n\n    return o.join(\"\\r\\n\");\n  }\n\n  function parse_quoted_printable(data) {\n    var o = [];\n    /* unify long lines */\n\n    for (var di = 0; di < data.length; ++di) {\n      var line = data[di];\n\n      while (di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\n      o.push(line);\n    }\n    /* decode */\n\n\n    for (var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function ($$) {\n      return String.fromCharCode(parseInt($$.slice(1), 16));\n    });\n\n    return s2a(o.join(\"\\r\\n\"));\n  }\n\n  function parse_mime(cfb, data, root) {\n    var fname = \"\",\n        cte = \"\",\n        ctype = \"\",\n        fdata;\n    var di = 0;\n\n    for (; di < 10; ++di) {\n      var line = data[di];\n      if (!line || line.match(/^\\s*$/)) break;\n      var m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n      if (m) switch (m[1].toLowerCase()) {\n        case \"content-location\":\n          fname = m[2].trim();\n          break;\n\n        case \"content-type\":\n          ctype = m[2].trim();\n          break;\n\n        case \"content-transfer-encoding\":\n          cte = m[2].trim();\n          break;\n      }\n    }\n\n    ++di;\n\n    switch (cte.toLowerCase()) {\n      case 'base64':\n        fdata = s2a(Base64_decode(data.slice(di).join(\"\")));\n        break;\n\n      case 'quoted-printable':\n        fdata = parse_quoted_printable(data.slice(di));\n        break;\n\n      default:\n        throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n    }\n\n    var file = cfb_add(cfb, fname.slice(root.length), fdata, {\n      unsafe: true\n    });\n    if (ctype) file.ctype = ctype;\n  }\n\n  function parse_mad(file, options) {\n    if (a2s(file.slice(0, 13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n    var root = options && options.root || \"\"; // $FlowIgnore\n\n    var data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n    var di = 0,\n        row = \"\";\n    /* if root is not specified, scan for the common prefix */\n\n    for (di = 0; di < data.length; ++di) {\n      row = data[di];\n      if (!/^Content-Location:/i.test(row)) continue;\n      row = row.slice(row.indexOf(\"file\"));\n      if (!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n      if (row.slice(0, root.length) == root) continue;\n\n      while (root.length > 0) {\n        root = root.slice(0, root.length - 1);\n        root = root.slice(0, root.lastIndexOf(\"/\") + 1);\n        if (row.slice(0, root.length) == root) break;\n      }\n    }\n\n    var mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n    if (!mboundary) throw new Error(\"MAD cannot find boundary\");\n    var boundary = \"--\" + (mboundary[1] || \"\");\n    var FileIndex = [],\n        FullPaths = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o);\n    var start_di,\n        fcnt = 0;\n\n    for (di = 0; di < data.length; ++di) {\n      var line = data[di];\n      if (line !== boundary && line !== boundary + \"--\") continue;\n      if (fcnt++) parse_mime(o, data.slice(start_di, di), root);\n      start_di = di;\n    }\n\n    return o;\n  }\n\n  function write_mad(cfb, options) {\n    var opts = options || {};\n    var boundary = opts.boundary || \"SheetJS\";\n    boundary = '------=' + boundary;\n    var out = ['MIME-Version: 1.0', 'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"', '', '', ''];\n    var root = cfb.FullPaths[0],\n        fp = root,\n        fi = cfb.FileIndex[0];\n\n    for (var i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n      /* Normalize filename */\n\n      fp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function (c) {\n        return \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n      }).replace(/[\\u0080-\\uFFFF]/g, function (u) {\n        return \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n      });\n      /* Extract content as binary string */\n\n      var ca = fi.content; // $FlowIgnore\n\n      var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n      /* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\n      var dispcnt = 0,\n          L = Math.min(1024, cstr.length),\n          cc = 0;\n\n      for (var csl = 0; csl <= L; ++csl) if ((cc = cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\n      var qp = dispcnt >= L * 4 / 5;\n      out.push(boundary);\n      out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n      out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n      out.push('Content-Type: ' + get_content_type(fi, fp));\n      out.push('');\n      out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n    }\n\n    out.push(boundary + '--\\r\\n');\n    return out.join(\"\\r\\n\");\n  }\n\n  function cfb_new(opts) {\n    var o = {};\n    init_cfb(o, opts);\n    return o;\n  }\n\n  function cfb_add(cfb, name, content, opts) {\n    var unsafe = opts && opts.unsafe;\n    if (!unsafe) init_cfb(cfb);\n    var file = !unsafe && CFB.find(cfb, name);\n\n    if (!file) {\n      var fpath = cfb.FullPaths[0];\n      if (name.slice(0, fpath.length) == fpath) fpath = name;else {\n        if (fpath.slice(-1) != \"/\") fpath += \"/\";\n        fpath = (fpath + name).replace(\"//\", \"/\");\n      }\n      file = {\n        name: filename(name),\n        type: 2\n      };\n      cfb.FileIndex.push(file);\n      cfb.FullPaths.push(fpath);\n      if (!unsafe) CFB.utils.cfb_gc(cfb);\n    }\n\n    file.content = content;\n    file.size = content ? content.length : 0;\n\n    if (opts) {\n      if (opts.CLSID) file.clsid = opts.CLSID;\n      if (opts.mt) file.mt = opts.mt;\n      if (opts.ct) file.ct = opts.ct;\n    }\n\n    return file;\n  }\n\n  function cfb_del(cfb, name) {\n    init_cfb(cfb);\n    var file = CFB.find(cfb, name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex.splice(j, 1);\n      cfb.FullPaths.splice(j, 1);\n      return true;\n    }\n    return false;\n  }\n\n  function cfb_mov(cfb, old_name, new_name) {\n    init_cfb(cfb);\n    var file = CFB.find(cfb, old_name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex[j].name = filename(new_name);\n      cfb.FullPaths[j] = new_name;\n      return true;\n    }\n    return false;\n  }\n\n  function cfb_gc(cfb) {\n    rebuild_cfb(cfb, true);\n  }\n\n  exports.find = find;\n  exports.read = read;\n  exports.parse = parse;\n  exports.write = write;\n  exports.writeFile = write_file;\n  exports.utils = {\n    cfb_new: cfb_new,\n    cfb_add: cfb_add,\n    cfb_del: cfb_del,\n    cfb_mov: cfb_mov,\n    cfb_gc: cfb_gc,\n    ReadShift: ReadShift,\n    CheckField: CheckField,\n    prep_blob: prep_blob,\n    bconcat: bconcat,\n    use_zlib: use_zlib,\n    _deflateRaw: _deflate,\n    _inflateRaw: _inflate,\n    consts: consts\n  };\n  return exports;\n}();\n\nif (typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') {\n  module.exports = CFB;\n}","map":{"version":3,"names":["Base64_map","Base64_encode","input","o","c1","c2","c3","e1","e2","e3","e4","i","length","charCodeAt","isNaN","charAt","Base64_decode","replace","indexOf","String","fromCharCode","has_buf","Buffer","process","versions","node","Buffer_from","nbfs","from","e","buf","enc","bind","new_raw_buf","len","alloc","b","fill","Uint8Array","Array","new_unsafe_buf","allocUnsafe","s2a","s","split","map","x","chr0","chr1","__toBuffer","bufs","push","apply","___toBuffer","__utf16le","ss","__readUInt16LE","join","___utf16le","__hexlify","l","toString","slice","___hexlify","__bconcat","isArray","concat","maxlen","set","bconcat","isBuffer","__readUInt8","idx","__readInt16LE","u","__readUInt32LE","__readInt32LE","ReadShift","size","t","oI","oS","type","__writeUInt32LE","val","__writeInt32LE","WriteShift","f","parseInt","end","Math","min","cc","CheckField","hexstr","fld","m","Error","prep_blob","blob","pos","read_shift","chk","write_shift","new_buf","sz","CRC32","version","signed_crc_table","c","table","n","Int32Array","T0","slice_by_16_tables","T","v","out","subarray","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","seed","C","L","crc32_buf","B","crc32_str","str","d","CFB","_CFB","exports","namecmp","r","R","Z","dirname","p","lastIndexOf","filename","write_dos_date","date","Date","hms","getHours","getMinutes","getSeconds","ymd","getFullYear","getMonth","getDate","parse_dos_date","setMilliseconds","setFullYear","setMonth","setDate","S","M","setHours","setMinutes","setSeconds","parse_extra_field","flags","tgt","mtime","atime","ctime","mt","fs","get_fs","require","parse","file","options","parse_zip","parse_mad","mver","ssz","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","fat_addrs","mv","check_get_mver","header","check_shifts","dir_cnt","q","j","sectors","sectorify","sleuth_fat","sector_list","make_sector_list","name","ENDOFCHAIN","files","Paths","FileIndex","FullPaths","read_directory","build_full_paths","shift","raw","HEADER_SIGNATURE","nsectors","ceil","FI","FP","pl","dad","get_mfat_entry","entry","payload","mini","start","MSSZ","cnt","sector","get_sector_list","chkd","buf_chain","modulus","jj","addr","floor","nodes","data","sl","k","seen","minifat_store","namelen","color","clsid","state","ct","read_date","storage","undefined","content","offset","pow","read_file","readFileSync","read","init_cfb","cfb","opts","root","CLSID","seed_cfb","nm","find","rebuild_cfb","gc","_file","pop","now","fullPaths","Object","create","HEADER_CLSID","sort","y","elt","_write","_opts","fileType","write_mad","write_zip","mini_size","fat_size","flen","mini_cnt","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","w","consts","DIFSECT","FATSECT","_nm","console","error","copy","path","UCFullPaths","toUpperCase","UCPaths","UCPath","match","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","write_file","writeFileSync","a2s","write","_zlib","use_zlib","zlib","InflateRaw","InflRaw","_processChunk","_finishFlushFlag","bytesRead","message","_inflateRawSync","usz","_inflate","_deflateRawSync","deflateRawSync","_deflate","CLEN_ORDER","LEN_LN","DST_LN","bit_swap_8","use_typed_arrays","bitswap8","bit_swap_n","rev","read_bits_2","bl","h","read_bits_3","read_bits_4","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","a","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","_deflateRawIIFE","DST_LN_RE","LEN_LN_RE","write_stored","boff","write_huff_fixed","addrs","hash","mlen","len_eb","dst_eb","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","next_code","hcodes","h1","h2","inflate","outbuf","woff","OL","max_len_1","max_len_2","bits","code","dst","warn_or_throw","wrn","msg","fcnt","start_cd","csz","efsz","fcsz","EF","parse_local_file","meth","crc32","_csz","_usz","ef","_crc32","cfb_add","unsafe","cdirs","method","compression","desc","fp","fi","crcs","sz_cd","namebuf","ContentTypeMap","get_content_type","ctype","ext","write_base64_76","write_quoted_printable","text","encoded","si","tmp","parse_quoted_printable","di","line","oi","$$","parse_mime","fname","cte","fdata","toLowerCase","trim","row","test","mboundary","boundary","start_di","ca","cstr","dispcnt","csl","qp","cfb_new","fpath","utils","cfb_gc","cfb_del","splice","cfb_mov","old_name","new_name","writeFile","_inflateRaw","module","DO_NOT_EXPORT_CFB"],"sources":["/Users/stichtinghelden/Documents/GitHub/de_verdwenen_ceo/node_modules/cfb/cfb.js"],"sourcesContent":["/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\n\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n\tvar o = \"\";\n\tvar c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n\tfor (var i = 0; i < input.length; ) {\n\t\tc1 = input.charCodeAt(i++);\n\t\te1 = (c1 >> 2);\n\t\tc2 = input.charCodeAt(i++);\n\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\n\t\tc3 = input.charCodeAt(i++);\n\t\te3 = ((c2 & 15) << 2) | (c3 >> 6);\n\t\te4 = (c3 & 63);\n\t\tif (isNaN(c2)) e3 = e4 = 64;\n\t\telse if (isNaN(c3)) e4 = 64;\n\t\to += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n\t}\n\treturn o;\n}\nfunction Base64_decode(input) {\n\tvar o = \"\";\n\tvar c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n\tinput = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n\tfor (var i = 0; i < input.length;) {\n\t\te1 = Base64_map.indexOf(input.charAt(i++));\n\t\te2 = Base64_map.indexOf(input.charAt(i++));\n\t\tc1 = (e1 << 2) | (e2 >> 4);\n\t\to += String.fromCharCode(c1);\n\t\te3 = Base64_map.indexOf(input.charAt(i++));\n\t\tc2 = ((e2 & 15) << 4) | (e3 >> 2);\n\t\tif (e3 !== 64) o += String.fromCharCode(c2);\n\t\te4 = Base64_map.indexOf(input.charAt(i++));\n\t\tc3 = ((e3 & 3) << 6) | e4;\n\t\tif (e4 !== 64) o += String.fromCharCode(c3);\n\t}\n\treturn o;\n}\nvar has_buf = (function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();\n\nvar Buffer_from = (function() {\n\tif(typeof Buffer !== 'undefined') {\n\t\tvar nbfs = !Buffer.from;\n\t\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\t\treturn nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t}\n\treturn function() {};\n})();\n\n\nfunction new_raw_buf(len) {\n\t/* jshint -W056 */\n\tif(has_buf) {\n\t\tif(Buffer.alloc) return Buffer.alloc(len);\n\t\tvar b = new Buffer(len); b.fill(0); return b;\n\t}\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s) {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x){ return x.charCodeAt(0) & 0xff; });\n};\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\nvar __toBuffer = function(bufs) { var x = []; for(var i = 0; i < bufs[0].length; ++i) { x.push.apply(x, bufs[0][i]); } return x; };\nvar ___toBuffer = __toBuffer;\nvar __utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar ___utf16le = __utf16le;\nvar __hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar ___hexlify = __hexlify;\nvar __bconcat = function(bufs) {\n\tif(Array.isArray(bufs[0])) return [].concat.apply([], bufs);\n\tvar maxlen = 0, i = 0;\n\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\tvar o = new Uint8Array(maxlen);\n\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += bufs[i].length, ++i) o.set(bufs[i], maxlen);\n\treturn o;\n};\nvar bconcat = __bconcat;\n\n\nif(has_buf) {\n\t__utf16le = function(b,s,e) {\n\t\tif(!Buffer.isBuffer(b)) return ___utf16le(b,s,e);\n\t\treturn b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/;\n\t};\n\t__hexlify = function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\n\t__toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat((bufs[0])) : ___toBuffer(bufs);};\n\ts2a = function(s) { return Buffer_from(s, \"binary\"); };\n\tbconcat = function(bufs) { return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : __bconcat(bufs); };\n}\n\n\nvar __readUInt8 = function(b, idx) { return b[idx]; };\nvar __readUInt16LE = function(b, idx) { return b[idx+1]*(1<<8)+b[idx]; };\nvar __readInt16LE = function(b, idx) { var u = b[idx+1]*(1<<8)+b[idx]; return (u < 0x8000) ? u : (0xffff - u + 1) * -1; };\nvar __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b, idx) { return (b[idx+3]<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\n\nfunction ReadShift(size, t) {\n\tvar oI, oS, type = 0;\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); break;\n\t\tcase 2: oI = (t !== 'i' ? __readUInt16LE : __readInt16LE)(this, this.l); break;\n\t\tcase 4: oI = __readInt32LE(this, this.l); break;\n\t\tcase 16: type = 2; oS = __hexlify(this, this.l, size);\n\t}\n\tthis.l += size; if(type === 0) return oI; return oS;\n}\n\nvar __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\n\nfunction WriteShift(t, val, f) {\n\tvar size = 0, i = 0;\n\tswitch(f) {\n\t\tcase \"hex\": for(; i < t; ++i) {\nthis[this.l++] = parseInt(val.slice(2*i, 2*i+2), 16)||0;\n\t\t} return this;\n\t\tcase \"utf16le\":\nvar end = this.l + t;\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = cc & 0xff;\n\t\t\t\tthis[this.l++] = cc >> 8;\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t}\nswitch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr, fld) {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos) {\n\tblob.l = pos;\n\tblob.read_shift = ReadShift;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction new_buf(sz) {\n\tvar o = (new_raw_buf(sz));\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = (function() {\nvar CRC32 = {};\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\nreturn CRC32;\n})();\n/* [MS-CFB] v20171201 */\nvar CFB = (function _CFB(){\nvar exports = {};\nexports.version = '1.2.2';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l, r) {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf, date) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf) {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob) {\n\tprep_blob(blob, 0);\n\tvar o = {};\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs;\nfunction get_fs() { return fs || (fs = require('fs')); }\nfunction parse(file, options) {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob = file.slice(0,512);\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files = {}, Paths = [], FileIndex = [], FullPaths = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob) {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob, mver) {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file, ssz) {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI, FP, Paths) {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad = [], q = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry, payload, mini) {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size));\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0));\n\treturn (bconcat(o).slice(0, entry.size));\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\n\tvar q = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tif(cnt >= 1) sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\n\tvar buf = [], buf_chain = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors, dir_start, fat_addrs, ssz) {\n\tvar sl = sectors.length, sector_list = ([]);\n\tvar chkd = [], buf = [], buf_chain = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob = sector.slice(i, i+128);\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size));\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob, offset) {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename, options) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob, options) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": return read_file(blob, options);\n\t\tcase \"base64\": return parse(s2a(Base64_decode(blob)), options);\n\t\tcase \"binary\": return parse(s2a(blob), options);\n\t}\n\treturn parse(blob, options);\n}\n\nfunction init_cfb(cfb, opts) {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 });\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb) {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb, f) {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\twhile(!s) {\n\t\t\twhile(dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t})]);\n\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\n\t\t\tdad = dirname(data[i][0]);\n\t\t\ts = fullPaths[dad];\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb, options) {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb){\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w) {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j = 0, flen = 0;\n\tvar file = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm = (i === 0 && _opts.root) || file.name;\n\t\tif(_nm.length > 32) {\n\t\t\tconsole.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0,32));\n\t\t\t_nm = _nm.slice(0, 32);\n\t\t}\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb, path) {\n\tvar UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath = path.toUpperCase();\n\tvar w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb, filename, options) {\n\tget_fs();\n\tvar o = _write(cfb, options);\nfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o) {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb, options) {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX) {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = (function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file, options) {\n\tvar blob = file;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex = [], FullPaths = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(blob.slice(blob.l+namelen, blob.l+namelen+efsz));\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob, csz, usz, o, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\tvar _crc32 = CRC32.buf(data, 0);\n\tif((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb, options) {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(fi.content, 0);\n\n\t\tvar outbuf = fi.content;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, fi.content.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out)), bconcat(cdirs), o]));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n});\n\nfunction get_content_type(fi, fp) {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr) {\n\tvar data = Base64_encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text) {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data) {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb, data, root) {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64_decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file, options) {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex = [], FullPaths = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb, options) {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts) {\n\tvar o = ({});\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb, name, content, opts) {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2});\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\nfile.content = (content);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb, name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb, old_name, new_name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb) { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nif(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}