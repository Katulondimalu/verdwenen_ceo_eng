{"ast":null,"code":"import * as React from 'react'; // import { shallowEqualArrays } from \"shallow-equal\";\n\nimport { EventEmitter } from 'events';\n/**\n * @typedef Deps\n * @type {unknown[] | null}\n *\n * @typedef Deferred\n * @type {\n *  | { $promise: Promise<any>, listeners: number }\n *  | { $fullfilled?: any, listeners: number }\n *  | { $rejected?: Error, listeners: number }\n * }\n */\n\nlet suspense_fetch = _ref => {\n  let {\n    cache,\n    key,\n    executeFn,\n    argument\n  } = _ref;\n  cache.set(key, {\n    listeners: 0,\n    $promise: (async () => {\n      try {\n        let result = await executeFn(argument);\n        cache.set(key, {\n          $fullfilled: result,\n          listeners: cache.get(key).listeners\n        });\n      } catch (error) {\n        cache.set(key, {\n          $rejected: error,\n          listeners: cache.get(key).listeners\n        });\n      } finally {// TODO Enable this when it actually helps\n        // setTimeout(() => {\n        //   if (cache.get(key).listeners === 0) {\n        //     cache.delete(key);\n        //   }\n        // }, 10 * 1000);\n      }\n    })()\n  });\n};\n/**\n * @function\n * @template Input\n * @template Output\n * @template Key\n * @param {(input: Input) => Key} keyMapFn\n * @param {(input: Input) => Promise<Output>} executeFn\n * @param {Map<Key, Deferred>} cache\n * @returns {((input: Input) => Output) & { refetch: (input: Input, value: Output) => Promise<void> }}\n */\n\n\nexport let withSuspense = function (keyMapFn, executeFn) {\n  var _s = $RefreshSig$();\n\n  let cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Map();\n  let suspense_events = new EventEmitter(); // suspense_events.setMaxListeners(Infinity);\n\n  suspense_events.setMaxListeners(100);\n  /** @type {(input: Input) => Output} */\n\n  let useSuspense = argument => {\n    _s();\n\n    let key = keyMapFn(argument); // let last_deps = React.useRef(null);\n    // eslint-disable-next-line no-unused-vars\n\n    let [_, update_refetch_value] = React.useState(0);\n    React.useEffect(() => {\n      let handler = updated_key => {\n        if (updated_key === key) {\n          update_refetch_value(Math.random());\n        }\n      };\n\n      suspense_events.on('refetch', handler);\n      return () => {\n        suspense_events.off('refetch', handler);\n      };\n    }, [key]); // TODO Add deps so you can refetch\n\n    if (!cache.has(key)) {\n      suspense_fetch({\n        cache: cache,\n        key: key,\n        executeFn: executeFn,\n        argument: argument\n      });\n    }\n\n    let connection = cache.get(key);\n    React.useEffect(() => {\n      cache.set(key, { ...cache.get(key),\n        listeners: cache.get(key).listeners + 1\n      });\n      return () => {\n        cache.set(key, { ...cache.get(key),\n          listeners: cache.get(key).listeners - 1\n        });\n      };\n    }, [key]);\n\n    if ('$promise' in connection) {\n      throw connection.$promise;\n    }\n\n    if ('$fullfilled' in connection) {\n      return connection.$fullfilled;\n    }\n\n    if ('$rejected' in connection) {\n      throw connection.$rejected;\n    }\n  };\n\n  _s(useSuspense, \"oWFmfK6ACxre9WWXU5dpXg7oR3Y=\");\n\n  Object.assign(useSuspense, {\n    refetch: async (argument, result) => {\n      let key = keyMapFn(argument);\n      cache.set(key, {\n        $fullfilled: result,\n        listeners: cache.get(key) == null || cache.get(key).listeners == null ? [] : cache.get(key).listeners\n      });\n      suspense_events.emit('refetch', key);\n    }\n  }); // @ts-ignore\n\n  return useSuspense;\n};","map":{"version":3,"names":["React","EventEmitter","suspense_fetch","cache","key","executeFn","argument","set","listeners","$promise","result","$fullfilled","get","error","$rejected","withSuspense","keyMapFn","Map","suspense_events","setMaxListeners","useSuspense","_","update_refetch_value","useState","useEffect","handler","updated_key","Math","random","on","off","has","connection","Object","assign","refetch","emit"],"sources":["/Users/stichtinghelden/Documents/GitHub/de_verdwenen_ceo/src/utils/with-suspense.js"],"sourcesContent":["import * as React from 'react';\n// import { shallowEqualArrays } from \"shallow-equal\";\nimport { EventEmitter } from 'events';\n\n/**\n * @typedef Deps\n * @type {unknown[] | null}\n *\n * @typedef Deferred\n * @type {\n *  | { $promise: Promise<any>, listeners: number }\n *  | { $fullfilled?: any, listeners: number }\n *  | { $rejected?: Error, listeners: number }\n * }\n */\n\nlet suspense_fetch = ({ cache, key, executeFn, argument }) => {\n  cache.set(key, {\n    listeners: 0,\n    $promise: (async () => {\n      try {\n        let result = await executeFn(argument);\n        cache.set(key, {\n          $fullfilled: result,\n          listeners: cache.get(key).listeners,\n        });\n      } catch (error) {\n        cache.set(key, {\n          $rejected: error,\n          listeners: cache.get(key).listeners,\n        });\n      } finally {\n        // TODO Enable this when it actually helps\n        // setTimeout(() => {\n        //   if (cache.get(key).listeners === 0) {\n        //     cache.delete(key);\n        //   }\n        // }, 10 * 1000);\n      }\n    })(),\n  });\n};\n\n/**\n * @function\n * @template Input\n * @template Output\n * @template Key\n * @param {(input: Input) => Key} keyMapFn\n * @param {(input: Input) => Promise<Output>} executeFn\n * @param {Map<Key, Deferred>} cache\n * @returns {((input: Input) => Output) & { refetch: (input: Input, value: Output) => Promise<void> }}\n */\nexport let withSuspense = (keyMapFn, executeFn, cache = new Map()) => {\n  let suspense_events = new EventEmitter();\n  // suspense_events.setMaxListeners(Infinity);\n  suspense_events.setMaxListeners(100);\n\n  /** @type {(input: Input) => Output} */\n  let useSuspense = (argument) => {\n    let key = keyMapFn(argument);\n\n    // let last_deps = React.useRef(null);\n\n    // eslint-disable-next-line no-unused-vars\n    let [_, update_refetch_value] = React.useState(0);\n    React.useEffect(() => {\n      let handler = (updated_key) => {\n        if (updated_key === key) {\n          update_refetch_value(Math.random());\n        }\n      };\n      suspense_events.on('refetch', handler);\n      return () => {\n        suspense_events.off('refetch', handler);\n      };\n    }, [key]);\n\n    // TODO Add deps so you can refetch\n    if (!cache.has(key)) {\n      suspense_fetch({\n        cache: cache,\n        key: key,\n        executeFn: executeFn,\n        argument: argument,\n      });\n    }\n    let connection = cache.get(key);\n\n    React.useEffect(() => {\n      cache.set(key, {\n        ...cache.get(key),\n        listeners: cache.get(key).listeners + 1,\n      });\n      return () => {\n        cache.set(key, {\n          ...cache.get(key),\n          listeners: cache.get(key).listeners - 1,\n        });\n      };\n    }, [key]);\n\n    if ('$promise' in connection) {\n      throw connection.$promise;\n    }\n    if ('$fullfilled' in connection) {\n      return connection.$fullfilled;\n    }\n    if ('$rejected' in connection) {\n      throw connection.$rejected;\n    }\n  };\n\n  Object.assign(useSuspense, {\n    refetch: async (argument, result) => {\n      let key = keyMapFn(argument);\n      cache.set(key, {\n        $fullfilled: result,\n        listeners:\n          cache.get(key) == null || cache.get(key).listeners == null\n            ? []\n            : cache.get(key).listeners,\n      });\n      suspense_events.emit('refetch', key);\n    },\n  });\n\n  // @ts-ignore\n  return useSuspense;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}