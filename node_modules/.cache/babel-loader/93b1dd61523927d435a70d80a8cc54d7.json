{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar FormatException_1 = require(\"../../../../FormatException\");\n\nvar IllegalStateException_1 = require(\"../../../../IllegalStateException\");\n\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\n\nvar DecodedChar_1 = require(\"./DecodedChar\");\n\nvar DecodedNumeric_1 = require(\"./DecodedNumeric\");\n\nvar DecodedInformation_1 = require(\"./DecodedInformation\");\n\nvar FieldParser_1 = require(\"./FieldParser\");\n\nvar BlockParsedResult_1 = require(\"./BlockParsedResult\");\n\nvar GeneralAppIdDecoder =\n/** @class */\nfunction () {\n  function GeneralAppIdDecoder(information) {\n    this.buffer = new StringBuilder_1.default();\n    this.information = information;\n  }\n\n  GeneralAppIdDecoder.prototype.decodeAllCodes = function (buff, initialPosition) {\n    var currentPosition = initialPosition;\n    var remaining = null;\n\n    do {\n      var info = this.decodeGeneralPurposeField(currentPosition, remaining);\n      var parsedFields = FieldParser_1.default.parseFieldsInGeneralPurpose(info.getNewString());\n\n      if (parsedFields != null) {\n        buff.append(parsedFields);\n      }\n\n      if (info.isRemaining()) {\n        remaining = \"\" + info.getRemainingValue();\n      } else {\n        remaining = null;\n      }\n\n      if (currentPosition == info.getNewPosition()) {\n        // No step forward!\n        break;\n      }\n\n      currentPosition = info.getNewPosition();\n    } while (true);\n\n    return buff.toString();\n  };\n\n  GeneralAppIdDecoder.prototype.isStillNumeric = function (pos) {\n    // It's numeric if it still has 7 positions\n    // and one of the first 4 bits is \"1\".\n    if (pos + 7 > this.information.getSize()) {\n      return pos + 4 <= this.information.getSize();\n    }\n\n    for (var i = pos; i < pos + 3; ++i) {\n      if (this.information.get(i)) {\n        return true;\n      }\n    }\n\n    return this.information.get(pos + 3);\n  };\n\n  GeneralAppIdDecoder.prototype.decodeNumeric = function (pos) {\n    if (pos + 7 > this.information.getSize()) {\n      var numeric_1 = this.extractNumericValueFromBitArray(pos, 4);\n\n      if (numeric_1 == 0) {\n        return new DecodedNumeric_1.default(this.information.getSize(), DecodedNumeric_1.default.FNC1, DecodedNumeric_1.default.FNC1);\n      }\n\n      return new DecodedNumeric_1.default(this.information.getSize(), numeric_1 - 1, DecodedNumeric_1.default.FNC1);\n    }\n\n    var numeric = this.extractNumericValueFromBitArray(pos, 7);\n    var digit1 = (numeric - 8) / 11;\n    var digit2 = (numeric - 8) % 11;\n    return new DecodedNumeric_1.default(pos + 7, digit1, digit2);\n  };\n\n  GeneralAppIdDecoder.prototype.extractNumericValueFromBitArray = function (pos, bits) {\n    return GeneralAppIdDecoder.extractNumericValueFromBitArray(this.information, pos, bits);\n  };\n\n  GeneralAppIdDecoder.extractNumericValueFromBitArray = function (information, pos, bits) {\n    var value = 0;\n\n    for (var i = 0; i < bits; ++i) {\n      if (information.get(pos + i)) {\n        value |= 1 << bits - i - 1;\n      }\n    }\n\n    return value;\n  };\n\n  GeneralAppIdDecoder.prototype.decodeGeneralPurposeField = function (pos, remaining) {\n    //this.buffer.setLength(0);\n    this.buffer.setLengthToZero();\n\n    if (remaining != null) {\n      this.buffer.append(remaining);\n    }\n\n    this.current.setPosition(pos);\n    var lastDecoded = this.parseBlocks();\n\n    if (lastDecoded != null && lastDecoded.isRemaining()) {\n      return new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString(), lastDecoded.getRemainingValue());\n    }\n\n    return new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n  };\n\n  GeneralAppIdDecoder.prototype.parseBlocks = function () {\n    var isFinished;\n    var result;\n\n    do {\n      var initialPosition = this.current.getPosition();\n\n      if (this.current.isAlpha()) {\n        result = this.parseAlphaBlock();\n        isFinished = result.isFinished();\n      } else if (this.current.isIsoIec646()) {\n        result = this.parseIsoIec646Block();\n        isFinished = result.isFinished();\n      } else {\n        // it must be numeric\n        result = this.parseNumericBlock();\n        isFinished = result.isFinished();\n      }\n\n      var positionChanged = initialPosition != this.current.getPosition();\n\n      if (!positionChanged && !isFinished) {\n        break;\n      }\n    } while (!isFinished);\n\n    return result.getDecodedInformation();\n  };\n\n  GeneralAppIdDecoder.prototype.parseNumericBlock = function () {\n    while (this.isStillNumeric(this.current.getPosition())) {\n      var numeric = this.decodeNumeric(this.current.getPosition());\n      this.current.setPosition(numeric.getNewPosition());\n\n      if (numeric.isFirstDigitFNC1()) {\n        var information = void 0;\n\n        if (numeric.isSecondDigitFNC1()) {\n          information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n        } else {\n          information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString(), numeric.getSecondDigit());\n        }\n\n        return new BlockParsedResult_1.default(true, information);\n      }\n\n      this.buffer.append(numeric.getFirstDigit());\n\n      if (numeric.isSecondDigitFNC1()) {\n        var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n        return new BlockParsedResult_1.default(true, information);\n      }\n\n      this.buffer.append(numeric.getSecondDigit());\n    }\n\n    if (this.isNumericToAlphaNumericLatch(this.current.getPosition())) {\n      this.current.setAlpha();\n      this.current.incrementPosition(4);\n    }\n\n    return new BlockParsedResult_1.default(false);\n  };\n\n  GeneralAppIdDecoder.prototype.parseIsoIec646Block = function () {\n    while (this.isStillIsoIec646(this.current.getPosition())) {\n      var iso = this.decodeIsoIec646(this.current.getPosition());\n      this.current.setPosition(iso.getNewPosition());\n\n      if (iso.isFNC1()) {\n        var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n        return new BlockParsedResult_1.default(true, information);\n      }\n\n      this.buffer.append(iso.getValue());\n    }\n\n    if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n      this.current.incrementPosition(3);\n      this.current.setNumeric();\n    } else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n      if (this.current.getPosition() + 5 < this.information.getSize()) {\n        this.current.incrementPosition(5);\n      } else {\n        this.current.setPosition(this.information.getSize());\n      }\n\n      this.current.setAlpha();\n    }\n\n    return new BlockParsedResult_1.default(false);\n  };\n\n  GeneralAppIdDecoder.prototype.parseAlphaBlock = function () {\n    while (this.isStillAlpha(this.current.getPosition())) {\n      var alpha = this.decodeAlphanumeric(this.current.getPosition());\n      this.current.setPosition(alpha.getNewPosition());\n\n      if (alpha.isFNC1()) {\n        var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n        return new BlockParsedResult_1.default(true, information); //end of the char block\n      }\n\n      this.buffer.append(alpha.getValue());\n    }\n\n    if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n      this.current.incrementPosition(3);\n      this.current.setNumeric();\n    } else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n      if (this.current.getPosition() + 5 < this.information.getSize()) {\n        this.current.incrementPosition(5);\n      } else {\n        this.current.setPosition(this.information.getSize());\n      }\n\n      this.current.setIsoIec646();\n    }\n\n    return new BlockParsedResult_1.default(false);\n  };\n\n  GeneralAppIdDecoder.prototype.isStillIsoIec646 = function (pos) {\n    if (pos + 5 > this.information.getSize()) {\n      return false;\n    }\n\n    var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n\n    if (fiveBitValue >= 5 && fiveBitValue < 16) {\n      return true;\n    }\n\n    if (pos + 7 > this.information.getSize()) {\n      return false;\n    }\n\n    var sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n\n    if (sevenBitValue >= 64 && sevenBitValue < 116) {\n      return true;\n    }\n\n    if (pos + 8 > this.information.getSize()) {\n      return false;\n    }\n\n    var eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n    return eightBitValue >= 232 && eightBitValue < 253;\n  };\n\n  GeneralAppIdDecoder.prototype.decodeIsoIec646 = function (pos) {\n    var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n\n    if (fiveBitValue == 15) {\n      return new DecodedChar_1.default(pos + 5, DecodedChar_1.default.FNC1);\n    }\n\n    if (fiveBitValue >= 5 && fiveBitValue < 15) {\n      return new DecodedChar_1.default(pos + 5, '0' + (fiveBitValue - 5));\n    }\n\n    var sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n\n    if (sevenBitValue >= 64 && sevenBitValue < 90) {\n      return new DecodedChar_1.default(pos + 7, \"\" + (sevenBitValue + 1));\n    }\n\n    if (sevenBitValue >= 90 && sevenBitValue < 116) {\n      return new DecodedChar_1.default(pos + 7, \"\" + (sevenBitValue + 7));\n    }\n\n    var eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n    var c;\n\n    switch (eightBitValue) {\n      case 232:\n        c = '!';\n        break;\n\n      case 233:\n        c = '\"';\n        break;\n\n      case 234:\n        c = '%';\n        break;\n\n      case 235:\n        c = '&';\n        break;\n\n      case 236:\n        c = '\\'';\n        break;\n\n      case 237:\n        c = '(';\n        break;\n\n      case 238:\n        c = ')';\n        break;\n\n      case 239:\n        c = '*';\n        break;\n\n      case 240:\n        c = '+';\n        break;\n\n      case 241:\n        c = ',';\n        break;\n\n      case 242:\n        c = '-';\n        break;\n\n      case 243:\n        c = '.';\n        break;\n\n      case 244:\n        c = '/';\n        break;\n\n      case 245:\n        c = ':';\n        break;\n\n      case 246:\n        c = ';';\n        break;\n\n      case 247:\n        c = '<';\n        break;\n\n      case 248:\n        c = '=';\n        break;\n\n      case 249:\n        c = '>';\n        break;\n\n      case 250:\n        c = '?';\n        break;\n\n      case 251:\n        c = '_';\n        break;\n\n      case 252:\n        c = ' ';\n        break;\n\n      default:\n        throw new FormatException_1.default();\n    }\n\n    return new DecodedChar_1.default(pos + 8, c);\n  };\n\n  GeneralAppIdDecoder.prototype.isStillAlpha = function (pos) {\n    if (pos + 5 > this.information.getSize()) {\n      return false;\n    } // We now check if it's a valid 5-bit value (0..9 and FNC1)\n\n\n    var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n\n    if (fiveBitValue >= 5 && fiveBitValue < 16) {\n      return true;\n    }\n\n    if (pos + 6 > this.information.getSize()) {\n      return false;\n    }\n\n    var sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n    return sixBitValue >= 16 && sixBitValue < 63; // 63 not included\n  };\n\n  GeneralAppIdDecoder.prototype.decodeAlphanumeric = function (pos) {\n    var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n\n    if (fiveBitValue == 15) {\n      return new DecodedChar_1.default(pos + 5, DecodedChar_1.default.FNC1);\n    }\n\n    if (fiveBitValue >= 5 && fiveBitValue < 15) {\n      return new DecodedChar_1.default(pos + 5, '0' + (fiveBitValue - 5));\n    }\n\n    var sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n\n    if (sixBitValue >= 32 && sixBitValue < 58) {\n      return new DecodedChar_1.default(pos + 6, '' + (sixBitValue + 33));\n    }\n\n    var c;\n\n    switch (sixBitValue) {\n      case 58:\n        c = '*';\n        break;\n\n      case 59:\n        c = ',';\n        break;\n\n      case 60:\n        c = '-';\n        break;\n\n      case 61:\n        c = '.';\n        break;\n\n      case 62:\n        c = '/';\n        break;\n\n      default:\n        throw new IllegalStateException_1.default(\"Decoding invalid alphanumeric value: \" + sixBitValue);\n    }\n\n    return new DecodedChar_1.default(pos + 6, c);\n  };\n\n  GeneralAppIdDecoder.prototype.isAlphaTo646ToAlphaLatch = function (pos) {\n    if (pos + 1 > this.information.getSize()) {\n      return false;\n    }\n\n    for (var i = 0; i < 5 && i + pos < this.information.getSize(); ++i) {\n      if (i == 2) {\n        if (!this.information.get(pos + 2)) {\n          return false;\n        }\n      } else if (this.information.get(pos + i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  GeneralAppIdDecoder.prototype.isAlphaOr646ToNumericLatch = function (pos) {\n    // Next is alphanumeric if there are 3 positions and they are all zeros\n    if (pos + 3 > this.information.getSize()) {\n      return false;\n    }\n\n    for (var i = pos; i < pos + 3; ++i) {\n      if (this.information.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  GeneralAppIdDecoder.prototype.isNumericToAlphaNumericLatch = function (pos) {\n    // Next is alphanumeric if there are 4 positions and they are all zeros, or\n    // if there is a subset of this just before the end of the symbol\n    if (pos + 1 > this.information.getSize()) {\n      return false;\n    }\n\n    for (var i = 0; i < 4 && i + pos < this.information.getSize(); ++i) {\n      if (this.information.get(pos + i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return GeneralAppIdDecoder;\n}();\n\nexports.default = GeneralAppIdDecoder;","map":{"version":3,"sources":["../../../../../../src/core/oned/rss/expanded/decoders/GeneralAppIdDecoder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FormatException_1 = require(\"../../../../FormatException\");\nvar IllegalStateException_1 = require(\"../../../../IllegalStateException\");\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\nvar DecodedChar_1 = require(\"./DecodedChar\");\nvar DecodedNumeric_1 = require(\"./DecodedNumeric\");\nvar DecodedInformation_1 = require(\"./DecodedInformation\");\nvar FieldParser_1 = require(\"./FieldParser\");\nvar BlockParsedResult_1 = require(\"./BlockParsedResult\");\nvar GeneralAppIdDecoder = /** @class */ (function () {\n    function GeneralAppIdDecoder(information) {\n        this.buffer = new StringBuilder_1.default();\n        this.information = information;\n    }\n    GeneralAppIdDecoder.prototype.decodeAllCodes = function (buff, initialPosition) {\n        var currentPosition = initialPosition;\n        var remaining = null;\n        do {\n            var info = this.decodeGeneralPurposeField(currentPosition, remaining);\n            var parsedFields = FieldParser_1.default.parseFieldsInGeneralPurpose(info.getNewString());\n            if (parsedFields != null) {\n                buff.append(parsedFields);\n            }\n            if (info.isRemaining()) {\n                remaining = \"\" + info.getRemainingValue();\n            }\n            else {\n                remaining = null;\n            }\n            if (currentPosition == info.getNewPosition()) { // No step forward!\n                break;\n            }\n            currentPosition = info.getNewPosition();\n        } while (true);\n        return buff.toString();\n    };\n    GeneralAppIdDecoder.prototype.isStillNumeric = function (pos) {\n        // It's numeric if it still has 7 positions\n        // and one of the first 4 bits is \"1\".\n        if (pos + 7 > this.information.getSize()) {\n            return pos + 4 <= this.information.getSize();\n        }\n        for (var i = pos; i < pos + 3; ++i) {\n            if (this.information.get(i)) {\n                return true;\n            }\n        }\n        return this.information.get(pos + 3);\n    };\n    GeneralAppIdDecoder.prototype.decodeNumeric = function (pos) {\n        if (pos + 7 > this.information.getSize()) {\n            var numeric_1 = this.extractNumericValueFromBitArray(pos, 4);\n            if (numeric_1 == 0) {\n                return new DecodedNumeric_1.default(this.information.getSize(), DecodedNumeric_1.default.FNC1, DecodedNumeric_1.default.FNC1);\n            }\n            return new DecodedNumeric_1.default(this.information.getSize(), numeric_1 - 1, DecodedNumeric_1.default.FNC1);\n        }\n        var numeric = this.extractNumericValueFromBitArray(pos, 7);\n        var digit1 = (numeric - 8) / 11;\n        var digit2 = (numeric - 8) % 11;\n        return new DecodedNumeric_1.default(pos + 7, digit1, digit2);\n    };\n    GeneralAppIdDecoder.prototype.extractNumericValueFromBitArray = function (pos, bits) {\n        return GeneralAppIdDecoder.extractNumericValueFromBitArray(this.information, pos, bits);\n    };\n    GeneralAppIdDecoder.extractNumericValueFromBitArray = function (information, pos, bits) {\n        var value = 0;\n        for (var i = 0; i < bits; ++i) {\n            if (information.get(pos + i)) {\n                value |= 1 << (bits - i - 1);\n            }\n        }\n        return value;\n    };\n    GeneralAppIdDecoder.prototype.decodeGeneralPurposeField = function (pos, remaining) {\n        //this.buffer.setLength(0);\n        this.buffer.setLengthToZero();\n        if (remaining != null) {\n            this.buffer.append(remaining);\n        }\n        this.current.setPosition(pos);\n        var lastDecoded = this.parseBlocks();\n        if (lastDecoded != null && lastDecoded.isRemaining()) {\n            return new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString(), lastDecoded.getRemainingValue());\n        }\n        return new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n    };\n    GeneralAppIdDecoder.prototype.parseBlocks = function () {\n        var isFinished;\n        var result;\n        do {\n            var initialPosition = this.current.getPosition();\n            if (this.current.isAlpha()) {\n                result = this.parseAlphaBlock();\n                isFinished = result.isFinished();\n            }\n            else if (this.current.isIsoIec646()) {\n                result = this.parseIsoIec646Block();\n                isFinished = result.isFinished();\n            }\n            else { // it must be numeric\n                result = this.parseNumericBlock();\n                isFinished = result.isFinished();\n            }\n            var positionChanged = initialPosition != this.current.getPosition();\n            if (!positionChanged && !isFinished) {\n                break;\n            }\n        } while (!isFinished);\n        return result.getDecodedInformation();\n    };\n    GeneralAppIdDecoder.prototype.parseNumericBlock = function () {\n        while (this.isStillNumeric(this.current.getPosition())) {\n            var numeric = this.decodeNumeric(this.current.getPosition());\n            this.current.setPosition(numeric.getNewPosition());\n            if (numeric.isFirstDigitFNC1()) {\n                var information = void 0;\n                if (numeric.isSecondDigitFNC1()) {\n                    information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n                }\n                else {\n                    information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString(), numeric.getSecondDigit());\n                }\n                return new BlockParsedResult_1.default(true, information);\n            }\n            this.buffer.append(numeric.getFirstDigit());\n            if (numeric.isSecondDigitFNC1()) {\n                var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n                return new BlockParsedResult_1.default(true, information);\n            }\n            this.buffer.append(numeric.getSecondDigit());\n        }\n        if (this.isNumericToAlphaNumericLatch(this.current.getPosition())) {\n            this.current.setAlpha();\n            this.current.incrementPosition(4);\n        }\n        return new BlockParsedResult_1.default(false);\n    };\n    GeneralAppIdDecoder.prototype.parseIsoIec646Block = function () {\n        while (this.isStillIsoIec646(this.current.getPosition())) {\n            var iso = this.decodeIsoIec646(this.current.getPosition());\n            this.current.setPosition(iso.getNewPosition());\n            if (iso.isFNC1()) {\n                var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n                return new BlockParsedResult_1.default(true, information);\n            }\n            this.buffer.append(iso.getValue());\n        }\n        if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n            this.current.incrementPosition(3);\n            this.current.setNumeric();\n        }\n        else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n            if (this.current.getPosition() + 5 < this.information.getSize()) {\n                this.current.incrementPosition(5);\n            }\n            else {\n                this.current.setPosition(this.information.getSize());\n            }\n            this.current.setAlpha();\n        }\n        return new BlockParsedResult_1.default(false);\n    };\n    GeneralAppIdDecoder.prototype.parseAlphaBlock = function () {\n        while (this.isStillAlpha(this.current.getPosition())) {\n            var alpha = this.decodeAlphanumeric(this.current.getPosition());\n            this.current.setPosition(alpha.getNewPosition());\n            if (alpha.isFNC1()) {\n                var information = new DecodedInformation_1.default(this.current.getPosition(), this.buffer.toString());\n                return new BlockParsedResult_1.default(true, information); //end of the char block\n            }\n            this.buffer.append(alpha.getValue());\n        }\n        if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n            this.current.incrementPosition(3);\n            this.current.setNumeric();\n        }\n        else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n            if (this.current.getPosition() + 5 < this.information.getSize()) {\n                this.current.incrementPosition(5);\n            }\n            else {\n                this.current.setPosition(this.information.getSize());\n            }\n            this.current.setIsoIec646();\n        }\n        return new BlockParsedResult_1.default(false);\n    };\n    GeneralAppIdDecoder.prototype.isStillIsoIec646 = function (pos) {\n        if (pos + 5 > this.information.getSize()) {\n            return false;\n        }\n        var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n        if (fiveBitValue >= 5 && fiveBitValue < 16) {\n            return true;\n        }\n        if (pos + 7 > this.information.getSize()) {\n            return false;\n        }\n        var sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n        if (sevenBitValue >= 64 && sevenBitValue < 116) {\n            return true;\n        }\n        if (pos + 8 > this.information.getSize()) {\n            return false;\n        }\n        var eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n        return eightBitValue >= 232 && eightBitValue < 253;\n    };\n    GeneralAppIdDecoder.prototype.decodeIsoIec646 = function (pos) {\n        var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n        if (fiveBitValue == 15) {\n            return new DecodedChar_1.default(pos + 5, DecodedChar_1.default.FNC1);\n        }\n        if (fiveBitValue >= 5 && fiveBitValue < 15) {\n            return new DecodedChar_1.default(pos + 5, ('0' + (fiveBitValue - 5)));\n        }\n        var sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n        if (sevenBitValue >= 64 && sevenBitValue < 90) {\n            return new DecodedChar_1.default(pos + 7, (\"\" + (sevenBitValue + 1)));\n        }\n        if (sevenBitValue >= 90 && sevenBitValue < 116) {\n            return new DecodedChar_1.default(pos + 7, (\"\" + (sevenBitValue + 7)));\n        }\n        var eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n        var c;\n        switch (eightBitValue) {\n            case 232:\n                c = '!';\n                break;\n            case 233:\n                c = '\"';\n                break;\n            case 234:\n                c = '%';\n                break;\n            case 235:\n                c = '&';\n                break;\n            case 236:\n                c = '\\'';\n                break;\n            case 237:\n                c = '(';\n                break;\n            case 238:\n                c = ')';\n                break;\n            case 239:\n                c = '*';\n                break;\n            case 240:\n                c = '+';\n                break;\n            case 241:\n                c = ',';\n                break;\n            case 242:\n                c = '-';\n                break;\n            case 243:\n                c = '.';\n                break;\n            case 244:\n                c = '/';\n                break;\n            case 245:\n                c = ':';\n                break;\n            case 246:\n                c = ';';\n                break;\n            case 247:\n                c = '<';\n                break;\n            case 248:\n                c = '=';\n                break;\n            case 249:\n                c = '>';\n                break;\n            case 250:\n                c = '?';\n                break;\n            case 251:\n                c = '_';\n                break;\n            case 252:\n                c = ' ';\n                break;\n            default:\n                throw new FormatException_1.default();\n        }\n        return new DecodedChar_1.default(pos + 8, c);\n    };\n    GeneralAppIdDecoder.prototype.isStillAlpha = function (pos) {\n        if (pos + 5 > this.information.getSize()) {\n            return false;\n        }\n        // We now check if it's a valid 5-bit value (0..9 and FNC1)\n        var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n        if (fiveBitValue >= 5 && fiveBitValue < 16) {\n            return true;\n        }\n        if (pos + 6 > this.information.getSize()) {\n            return false;\n        }\n        var sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n        return sixBitValue >= 16 && sixBitValue < 63; // 63 not included\n    };\n    GeneralAppIdDecoder.prototype.decodeAlphanumeric = function (pos) {\n        var fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n        if (fiveBitValue == 15) {\n            return new DecodedChar_1.default(pos + 5, DecodedChar_1.default.FNC1);\n        }\n        if (fiveBitValue >= 5 && fiveBitValue < 15) {\n            return new DecodedChar_1.default(pos + 5, ('0' + (fiveBitValue - 5)));\n        }\n        var sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n        if (sixBitValue >= 32 && sixBitValue < 58) {\n            return new DecodedChar_1.default(pos + 6, ('' + (sixBitValue + 33)));\n        }\n        var c;\n        switch (sixBitValue) {\n            case 58:\n                c = '*';\n                break;\n            case 59:\n                c = ',';\n                break;\n            case 60:\n                c = '-';\n                break;\n            case 61:\n                c = '.';\n                break;\n            case 62:\n                c = '/';\n                break;\n            default:\n                throw new IllegalStateException_1.default(\"Decoding invalid alphanumeric value: \" + sixBitValue);\n        }\n        return new DecodedChar_1.default(pos + 6, c);\n    };\n    GeneralAppIdDecoder.prototype.isAlphaTo646ToAlphaLatch = function (pos) {\n        if (pos + 1 > this.information.getSize()) {\n            return false;\n        }\n        for (var i = 0; i < 5 && i + pos < this.information.getSize(); ++i) {\n            if (i == 2) {\n                if (!this.information.get(pos + 2)) {\n                    return false;\n                }\n            }\n            else if (this.information.get(pos + i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    GeneralAppIdDecoder.prototype.isAlphaOr646ToNumericLatch = function (pos) {\n        // Next is alphanumeric if there are 3 positions and they are all zeros\n        if (pos + 3 > this.information.getSize()) {\n            return false;\n        }\n        for (var i = pos; i < pos + 3; ++i) {\n            if (this.information.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    GeneralAppIdDecoder.prototype.isNumericToAlphaNumericLatch = function (pos) {\n        // Next is alphanumeric if there are 4 positions and they are all zeros, or\n        // if there is a subset of this just before the end of the symbol\n        if (pos + 1 > this.information.getSize()) {\n            return false;\n        }\n        for (var i = 0; i < 4 && i + pos < this.information.getSize(); ++i) {\n            if (this.information.get(pos + i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return GeneralAppIdDecoder;\n}());\nexports.default = GeneralAppIdDecoder;\n//# sourceMappingURL=GeneralAppIdDecoder.js.map"]},"metadata":{},"sourceType":"script"}