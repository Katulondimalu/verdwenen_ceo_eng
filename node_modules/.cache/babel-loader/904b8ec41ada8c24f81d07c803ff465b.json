{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417;\n// import com.google.zxing.BarcodeFormat;\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\"); // import com.google.zxing.ChecksumException;\n\n\nvar ChecksumException_1 = require(\"../ChecksumException\"); // import com.google.zxing.FormatException;\n\n\nvar FormatException_1 = require(\"../FormatException\"); // import com.google.zxing.NotFoundException;\n\n\nvar NotFoundException_1 = require(\"../NotFoundException\"); // import com.google.zxing.Result;\n\n\nvar Result_1 = require(\"../Result\"); // import com.google.zxing.common.DecoderResult;\n// import com.google.zxing.multi.MultipleBarcodeReader;\n// import com.google.zxing.pdf417.decoder.PDF417ScanningDecoder;\n// import com.google.zxing.pdf417.detector.Detector;\n// import com.google.zxing.pdf417.detector.PDF417DetectorResult;\n\n\nvar PDF417Common_1 = require(\"./PDF417Common\");\n\nvar Integer_1 = require(\"../util/Integer\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar Detector_1 = require(\"./detector/Detector\");\n\nvar PDF417ScanningDecoder_1 = require(\"./decoder/PDF417ScanningDecoder\"); // import java.util.ArrayList;\n// import java.util.List;\n// import java.util.Map;\n\n/**\n * This implementation can detect and decode PDF417 codes in an image.\n *\n * @author Guenther Grau\n */\n\n\nvar PDF417Reader =\n/** @class */\nfunction () {\n  function PDF417Reader() {} // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n\n  /**\n   * Locates and decodes a PDF417 code in an image.\n   *\n   * @return a String representing the content encoded by the PDF417 code\n   * @throws NotFoundException if a PDF417 code cannot be found,\n   * @throws FormatException if a PDF417 cannot be decoded\n   * @throws ChecksumException\n   */\n  // @Override\n\n\n  PDF417Reader.prototype.decode = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    var result = PDF417Reader.decode(image, hints, false);\n\n    if (result == null || result.length === 0 || result[0] == null) {\n      throw NotFoundException_1.default.getNotFoundInstance();\n    }\n\n    return result[0];\n  };\n  /**\n   *\n   * @param BinaryBitmap\n   * @param image\n   * @throws NotFoundException\n   */\n  //   @Override\n\n\n  PDF417Reader.prototype.decodeMultiple = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    try {\n      return PDF417Reader.decode(image, hints, true);\n    } catch (ignored) {\n      if (ignored instanceof FormatException_1.default || ignored instanceof ChecksumException_1.default) {\n        throw NotFoundException_1.default.getNotFoundInstance();\n      }\n\n      throw ignored;\n    }\n  };\n  /**\n   *\n   * @param image\n   * @param hints\n   * @param multiple\n   *\n   * @throws NotFoundException\n   * @throws FormatException√ü\n   * @throws ChecksumException\n   */\n\n\n  PDF417Reader.decode = function (image, hints, multiple) {\n    var e_1, _a;\n\n    var results = new Array();\n    var detectorResult = Detector_1.default.detectMultiple(image, hints, multiple);\n\n    try {\n      for (var _b = __values(detectorResult.getPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var points = _c.value;\n        var decoderResult = PDF417ScanningDecoder_1.default.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n        var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.PDF_417);\n        result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n        var pdf417ResultMetadata = decoderResult.getOther();\n\n        if (pdf417ResultMetadata != null) {\n          result.putMetadata(ResultMetadataType_1.default.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n        }\n\n        results.push(result);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return results.map(function (x) {\n      return x;\n    });\n  };\n\n  PDF417Reader.getMaxWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return 0;\n    }\n\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n\n  PDF417Reader.getMinWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return Integer_1.default.MAX_VALUE;\n    }\n\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n\n  PDF417Reader.getMaxCodewordWidth = function (p) {\n    return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  };\n\n  PDF417Reader.getMinCodewordWidth = function (p) {\n    return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  }; // @Override\n\n\n  PDF417Reader.prototype.reset = function () {// nothing needs to be reset\n  };\n\n  return PDF417Reader;\n}();\n\nexports.default = PDF417Reader;","map":{"version":3,"sources":["../../../src/core/pdf417/PDF417Reader.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417;\n// import com.google.zxing.BarcodeFormat;\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n// import com.google.zxing.ChecksumException;\nvar ChecksumException_1 = require(\"../ChecksumException\");\n// import com.google.zxing.FormatException;\nvar FormatException_1 = require(\"../FormatException\");\n// import com.google.zxing.NotFoundException;\nvar NotFoundException_1 = require(\"../NotFoundException\");\n// import com.google.zxing.Result;\nvar Result_1 = require(\"../Result\");\n// import com.google.zxing.common.DecoderResult;\n// import com.google.zxing.multi.MultipleBarcodeReader;\n// import com.google.zxing.pdf417.decoder.PDF417ScanningDecoder;\n// import com.google.zxing.pdf417.detector.Detector;\n// import com.google.zxing.pdf417.detector.PDF417DetectorResult;\nvar PDF417Common_1 = require(\"./PDF417Common\");\nvar Integer_1 = require(\"../util/Integer\");\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\nvar Detector_1 = require(\"./detector/Detector\");\nvar PDF417ScanningDecoder_1 = require(\"./decoder/PDF417ScanningDecoder\");\n// import java.util.ArrayList;\n// import java.util.List;\n// import java.util.Map;\n/**\n * This implementation can detect and decode PDF417 codes in an image.\n *\n * @author Guenther Grau\n */\nvar PDF417Reader = /** @class */ (function () {\n    function PDF417Reader() {\n    }\n    // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n    /**\n     * Locates and decodes a PDF417 code in an image.\n     *\n     * @return a String representing the content encoded by the PDF417 code\n     * @throws NotFoundException if a PDF417 code cannot be found,\n     * @throws FormatException if a PDF417 cannot be decoded\n     * @throws ChecksumException\n     */\n    // @Override\n    PDF417Reader.prototype.decode = function (image, hints) {\n        if (hints === void 0) { hints = null; }\n        var result = PDF417Reader.decode(image, hints, false);\n        if (result == null || result.length === 0 || result[0] == null) {\n            throw NotFoundException_1.default.getNotFoundInstance();\n        }\n        return result[0];\n    };\n    /**\n     *\n     * @param BinaryBitmap\n     * @param image\n     * @throws NotFoundException\n     */\n    //   @Override\n    PDF417Reader.prototype.decodeMultiple = function (image, hints) {\n        if (hints === void 0) { hints = null; }\n        try {\n            return PDF417Reader.decode(image, hints, true);\n        }\n        catch (ignored) {\n            if (ignored instanceof FormatException_1.default || ignored instanceof ChecksumException_1.default) {\n                throw NotFoundException_1.default.getNotFoundInstance();\n            }\n            throw ignored;\n        }\n    };\n    /**\n     *\n     * @param image\n     * @param hints\n     * @param multiple\n     *\n     * @throws NotFoundException\n     * @throws FormatException√ü\n     * @throws ChecksumException\n     */\n    PDF417Reader.decode = function (image, hints, multiple) {\n        var e_1, _a;\n        var results = new Array();\n        var detectorResult = Detector_1.default.detectMultiple(image, hints, multiple);\n        try {\n            for (var _b = __values(detectorResult.getPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var points = _c.value;\n                var decoderResult = PDF417ScanningDecoder_1.default.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n                var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.PDF_417);\n                result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n                var pdf417ResultMetadata = decoderResult.getOther();\n                if (pdf417ResultMetadata != null) {\n                    result.putMetadata(ResultMetadataType_1.default.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n                }\n                results.push(result);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return results.map(function (x) { return x; });\n    };\n    PDF417Reader.getMaxWidth = function (p1, p2) {\n        if (p1 == null || p2 == null) {\n            return 0;\n        }\n        return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n    };\n    PDF417Reader.getMinWidth = function (p1, p2) {\n        if (p1 == null || p2 == null) {\n            return Integer_1.default.MAX_VALUE;\n        }\n        return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n    };\n    PDF417Reader.getMaxCodewordWidth = function (p) {\n        return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n    };\n    PDF417Reader.getMinCodewordWidth = function (p) {\n        return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n    };\n    // @Override\n    PDF417Reader.prototype.reset = function () {\n        // nothing needs to be reset\n    };\n    return PDF417Reader;\n}());\nexports.default = PDF417Reader;\n//# sourceMappingURL=PDF417Reader.js.map"]},"metadata":{},"sourceType":"script"}